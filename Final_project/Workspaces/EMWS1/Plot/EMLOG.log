*------------------------------------------------------------*
User:                shaht
Date:                August 07, 2022
Time:                16:06:38
Site:                70192439
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:06:18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                August 07, 2022
Time:                16:06:18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2JEGAU4 "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2JEGAU4 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:06:18" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                shaht";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70192439";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:06:18" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                shaht";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21328      proc freq data=EMWS1.Plot_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Plot_VariableSet noprint;
21329      table ROLE*LEVEL/out=WORK.PlotMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.PlotMETA;
21330      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.PLOT_VARIABLESET.
NOTE: The data set WORK.PLOTMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
21331      proc print data=WORK.PlotMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.PlotMETA label noobs;
21332      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21333      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21334      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21335      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21336      run;
 
NOTE: There were 3 observations read from the data set WORK.PLOTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
21337      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    data WORK.M2_MLCM4;
MPRINT(EM_DIAGRAM):   set WORK.M2_MLCM4;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'TARGET';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role in('REJECTED' 'PREDICT' 'RESIDUAL' 'GROUP' 'ASSESS') and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'INPUT' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'FREQ' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'FREQ';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   run;
21358      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21359      * Plot: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot: DMDBClass Macro ;
21360      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21361      %macro DMDBClass;
21362          Class(DESC) age(ASC) breast(ASC) breast_quad(ASC) deg_malig(ASC)
21363         inv_nodes(ASC) irradiat(ASC) menopause(ASC) node_caps(ASC) tumor_size(ASC)
21364      %mend DMDBClass;
21365      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21366      * Plot: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot: Create DMDB;
21367      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21368      proc dmdb batch data=EMWS1.FIMPORT_train
21369      dmdbcat=WORK.Plot_DMDB
21370      maxlevel = 23
21371      nonorm
21372      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.FIMPORT_train dmdbcat=WORK.Plot_DMDB maxlevel = 23 nonorm ;
MPRINT(EM_DIAGRAM):   class
21373      class %DMDBClass;
MPRINT(DMDBCLASS):   Class(DESC) age(ASC) breast(ASC) breast_quad(ASC) deg_malig(ASC) inv_nodes(ASC) irradiat(ASC) menopause(ASC) node_caps(ASC) tumor_size(ASC)
MPRINT(EM_DIAGRAM):  ;
21374      target
21375      Class
21376      ;
MPRINT(EM_DIAGRAM):   target Class ;
21377      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 286   Memory used = 511K.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21378      quit;
 
21379      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21380      * Plot: Creating variable by class target charts;
MPRINT(EM_DIAGRAM):   * Plot: Creating variable by class target charts;
21381      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21382      goptions ftext="SWISS";
MPRINT(EM_DIAGRAM):   goptions ftext="SWISS";
21383      goptions nodisplay device=PNG;
MPRINT(EM_DIAGRAM):   goptions nodisplay device=PNG;
21384      axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
MPRINT(EM_DIAGRAM):   axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
21385      axis2 width=2 minor=none;
MPRINT(EM_DIAGRAM):   axis2 width=2 minor=none;
21386      pattern1 value=solid;
MPRINT(EM_DIAGRAM):   pattern1 value=solid;
21387      proc gchart
21388      data=EMWS1.FIMPORT_train gout=WORK.PlotGRAPH;
MPRINT(EM_DIAGRAM):   proc gchart data=EMWS1.FIMPORT_train gout=WORK.PlotGRAPH;
21389      *;
MPRINT(EM_DIAGRAM):   *;
21390      title "age by Class";
MPRINT(EM_DIAGRAM):   title "age by Class";
21391      vbar age /
21392      name = "age            x Class          " description = "age by Class"
21393      FREQ
MPRINT(EM_DIAGRAM):   vbar age / name = "age            x Class          " description = "age by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21394      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21395      subgroup=Class
21396      noframe
21397      missing
21398      raxis=axis1 maxis=axis2;
21399      run;
 
NOTE: Graph's name, AGE, changed to AGE. AGE is already used or not a valid SAS name.
21400      title "breast by Class";
MPRINT(EM_DIAGRAM):   title "breast by Class";
21401      vbar breast /
21402      name = "breast         x Class          " description = "breast by Class"
21403      FREQ
MPRINT(EM_DIAGRAM):   vbar breast / name = "breast         x Class          " description = "breast by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21404      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21405      subgroup=Class
21406      noframe
21407      missing
21408      raxis=axis1 maxis=axis2;
21409      run;
 
NOTE: Graph's name, BREAST, changed to BREAST. BREAST is already used or not a valid SAS name.
21410      title "breast_quad by Class";
MPRINT(EM_DIAGRAM):   title "breast_quad by Class";
21411      vbar breast_quad /
21412      name = "breast_quad    x Class          " description = "breast_quad by Class"
21413      FREQ
MPRINT(EM_DIAGRAM):   vbar breast_quad / name = "breast_quad    x Class          " description = "breast_quad by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21414      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21415      subgroup=Class
21416      noframe
21417      missing
21418      raxis=axis1 maxis=axis2;
21419      run;
 
NOTE: Graph's name, BREAST_Q, changed to BREAST_Q. BREAST_Q is already used or not a valid SAS name.
21420      title "deg_malig by Class";
MPRINT(EM_DIAGRAM):   title "deg_malig by Class";
21421      vbar deg_malig /
21422      name = "deg_malig      x Class          " description = "deg_malig by Class"
21423      FREQ
21424      type=FREQ
MPRINT(EM_DIAGRAM):   vbar deg_malig / name = "deg_malig      x Class          " description = "deg_malig by Class" FREQ type=FREQ subgroup=Class noframe missing discrete raxis=axis1 maxis=axis2;
21425      subgroup=Class
MPRINT(EM_DIAGRAM):   run;
21426      noframe
21427      missing
21428      discrete
21429      raxis=axis1 maxis=axis2;
21430      run;
 
NOTE: Graph's name, DEG_MALI, changed to DEG_MALI. DEG_MALI is already used or not a valid SAS name.
21431      title "inv_nodes by Class";
MPRINT(EM_DIAGRAM):   title "inv_nodes by Class";
21432      vbar inv_nodes /
21433      name = "inv_nodes      x Class          " description = "inv_nodes by Class"
21434      FREQ
MPRINT(EM_DIAGRAM):   vbar inv_nodes / name = "inv_nodes      x Class          " description = "inv_nodes by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21435      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21436      subgroup=Class
21437      noframe
21438      missing
21439      raxis=axis1 maxis=axis2;
21440      run;
 
NOTE: Graph's name, INV_NODE, changed to INV_NODE. INV_NODE is already used or not a valid SAS name.
21441      title "irradiat by Class";
MPRINT(EM_DIAGRAM):   title "irradiat by Class";
21442      vbar irradiat /
21443      name = "irradiat       x Class          " description = "irradiat by Class"
21444      FREQ
MPRINT(EM_DIAGRAM):   vbar irradiat / name = "irradiat       x Class          " description = "irradiat by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21445      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21446      subgroup=Class
21447      noframe
21448      missing
21449      raxis=axis1 maxis=axis2;
21450      run;
 
NOTE: Graph's name, IRRADIAT, changed to IRRADIAT. IRRADIAT is already used or not a valid SAS name.
21451      title "menopause by Class";
MPRINT(EM_DIAGRAM):   title "menopause by Class";
21452      vbar menopause /
21453      name = "menopause      x Class          " description = "menopause by Class"
21454      FREQ
MPRINT(EM_DIAGRAM):   vbar menopause / name = "menopause      x Class          " description = "menopause by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21455      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21456      subgroup=Class
21457      noframe
21458      missing
21459      raxis=axis1 maxis=axis2;
21460      run;
 
NOTE: Graph's name, MENOPAUS, changed to MENOPAUS. MENOPAUS is already used or not a valid SAS name.
21461      title "node_caps by Class";
MPRINT(EM_DIAGRAM):   title "node_caps by Class";
21462      vbar node_caps /
21463      name = "node_caps      x Class          " description = "node_caps by Class"
21464      FREQ
MPRINT(EM_DIAGRAM):   vbar node_caps / name = "node_caps      x Class          " description = "node_caps by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21465      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21466      subgroup=Class
21467      noframe
21468      missing
21469      raxis=axis1 maxis=axis2;
21470      run;
 
NOTE: Graph's name, NODE_CAP, changed to NODE_CAP. NODE_CAP is already used or not a valid SAS name.
21471      title "tumor_size by Class";
MPRINT(EM_DIAGRAM):   title "tumor_size by Class";
21472      vbar tumor_size /
21473      name = "tumor_size     x Class          " description = "tumor_size by Class"
21474      FREQ
MPRINT(EM_DIAGRAM):   vbar tumor_size / name = "tumor_size     x Class          " description = "tumor_size by Class" FREQ type=FREQ subgroup=Class noframe missing raxis=axis1 maxis=axis2;
21475      type=FREQ
MPRINT(EM_DIAGRAM):   run;
21476      subgroup=Class
21477      noframe
21478      missing
21479      raxis=axis1 maxis=axis2;
21480      run;
 
NOTE: Graph's name, TUMOR_SI, changed to TUMOR_SI. TUMOR_SI is already used or not a valid SAS name.
21481      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           11.25 seconds
      cpu time            0.81 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: PROCEDURE GCHART used (Total process time):
      real time           11.34 seconds
      cpu time            0.82 seconds
 
 
21482      title;
MPRINT(EM_DIAGRAM):   title;
21483      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
21484      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21485      * Plot: Creating variable by interval target charts;
MPRINT(EM_DIAGRAM):   * Plot: Creating variable by interval target charts;
21486      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21487      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21488      * Plot: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot: DMDBClass Macro ;
21489      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21490      %macro DMDBClass;
21491          Class(DESC) age(ASC) breast(ASC) breast_quad(ASC) inv_nodes(ASC) irradiat(ASC)
21492         menopause(ASC) node_caps(ASC) tumor_size(ASC)
21493      %mend DMDBClass;
21494      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21495      * Plot: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Plot: DMDBVar Macro ;
21496      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21497      %macro DMDBVar;
21498          deg_malig
21499      %mend DMDBVar;
21500      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21501      * Plot: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot: Create DMDB;
21502      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21503      proc dmdb batch data=EMWS1.FIMPORT_train
21504      dmdbcat=WORK.Plot_DMDB
21505      classout=work.classoutDs
21506      varout=work.varoutDs
21507      maxlevel = 513
21508      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.FIMPORT_train dmdbcat=WORK.Plot_DMDB classout=work.classoutDs varout=work.varoutDs maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
21509      class %DMDBClass;
MPRINT(DMDBCLASS):   Class(DESC) age(ASC) breast(ASC) breast_quad(ASC) inv_nodes(ASC) irradiat(ASC) menopause(ASC) node_caps(ASC) tumor_size(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
21510      var %DMDBVar;
MPRINT(DMDBVAR):   deg_malig
MPRINT(EM_DIAGRAM):  ;
21511      target
21512      Class
21513      ;
MPRINT(EM_DIAGRAM):   target Class ;
21514      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 286   Memory used = 511K.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_DATA.
NOTE: There were 286 observations read from the data set EMWS1.FIMPORT_TRAIN.
NOTE: The data set WORK.CLASSOUTDS has 42 observations and 9 variables.
NOTE: The data set WORK.VAROUTDS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
21515      quit;
21516      *--- end code ---*;
 
21517      title8;
MPRINT(EM_DIAGRAM):    title8;
21518      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_classvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Class Variables";
21519      proc print data=work.classoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.classoutDs;
21520      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 42 observations read from the data set WORK.CLASSOUTDS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21521      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
21522      delete classoutDs;
MPRINT(EM_DIAGRAM):   delete classoutDs;
21523      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.CLASSOUTDS (memtype=DATA).
21524      title8;
MPRINT(EM_DIAGRAM):   title8;
21525      title8;
MPRINT(EM_DIAGRAM):   title8;
21526      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_intvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Interval Variables";
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21527      proc print data=work.varoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.varoutDs;
21528      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.VAROUTDS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21529      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
21530      delete varoutDs;
MPRINT(EM_DIAGRAM):   delete varoutDs;
21531      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.VAROUTDS (memtype=DATA).
21532      title8;
MPRINT(EM_DIAGRAM):   title8;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21533      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=WORK nolist;
21534      delete Plot_DMDB;
MPRINT(EM_DIAGRAM):   delete Plot_DMDB;
21535      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file WORK.PLOT_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
21536      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21537      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
21538      delete Plot_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Plot_DMDB / memtype=catalog;
21539      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.PLOT_DMDB (memtype=CATALOG).
21540      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
21541      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21542      * Plot: Copying graphs to node folder;
MPRINT(EM_DIAGRAM):   * Plot: Copying graphs to node folder;
21543      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21544      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\age by Class.png";
MPRINT(EM_DIAGRAM):   filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\age by Class.png";
21545      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21546      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21547      replay AGE;
MPRINT(EM_DIAGRAM):   replay AGE;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
NOTE: 7290 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\age by Class.png.
21548      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           1.21 seconds
      cpu time            0.15 seconds
 
 
21549      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21550      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21551      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\breast by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\breast by Class.png";
21552      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21553      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21554      replay BREAST;
MPRINT(EM_DIAGRAM):   replay BREAST;
NOTE: 6853 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\breast by Class.png.
21555      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
 
 
21556      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21557      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21558      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\breast_quad by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\breast_quad by Class.png";
21559      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21560      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21561      replay BREAST_Q;
MPRINT(EM_DIAGRAM):   replay BREAST_Q;
NOTE: 7260 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\breast_quad by Class.png.
21562      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.23 seconds
      cpu time            0.14 seconds
 
 
21563      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21564      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21565      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\deg_malig by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\deg_malig by Class.png";
21566      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21567      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21568      replay DEG_MALI;
MPRINT(EM_DIAGRAM):   replay DEG_MALI;
NOTE: 6770 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\deg_malig by Class.png.
21569      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
21570      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21571      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21572      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\inv_nodes by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\inv_nodes by Class.png";
21573      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21574      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21575      replay INV_NODE;
MPRINT(EM_DIAGRAM):   replay INV_NODE;
NOTE: 6870 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\inv_nodes by Class.png.
21576      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.10 seconds
 
 
21577      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21578      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21579      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\irradiat by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\irradiat by Class.png";
21580      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21581      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21582      replay IRRADIAT;
MPRINT(EM_DIAGRAM):   replay IRRADIAT;
NOTE: 5756 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\irradiat by Class.png.
21583      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.11 seconds
 
 
21584      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21585      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21586      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\menopause by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\menopause by Class.png";
21587      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21588      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21589      replay MENOPAUS;
MPRINT(EM_DIAGRAM):   replay MENOPAUS;
NOTE: 7114 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\menopause by Class.png.
21590      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
 
21591      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21592      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21593      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\node_caps by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\node_caps by Class.png";
21594      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21595      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21596      replay NODE_CAP;
MPRINT(EM_DIAGRAM):   replay NODE_CAP;
NOTE: 6061 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\node_caps by Class.png.
21597      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds
 
 
21598      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21599      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
21600      filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\tumor_size by Class.png";
MPRINT(EM_DIAGRAM):    filename gsasfile "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\tumor_size by Class.png";
21601      goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= PNG display gaccess= gsasfile gsfmode= replace cback= white;
21602      proc greplay igout=WORK.PLOTGRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOTGRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
21603      replay TUMOR_SI;
MPRINT(EM_DIAGRAM):   replay TUMOR_SI;
NOTE: 7992 bytes written to C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\GRAPH\tumor_size by Class.png.
21604      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
 
 
21605      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
21606      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:06:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                August 07, 2022
Time:                16:06:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1K7_69E "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1K7_69E new;
MPRINT(EM_DIAGRAM):   run;
21708      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21709      * Plot: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Plot: Scoring DATA data;
21710      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21711      data EMWS1.Plot_TRAIN
21712      / view=EMWS1.Plot_TRAIN
21713      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Plot_TRAIN / view=EMWS1.Plot_TRAIN ;
21714      set EMWS1.FIMPORT_train
21715      ;
MPRINT(EM_DIAGRAM):   set EMWS1.FIMPORT_train ;
21716      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.PLOT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.FIMPORT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
21717      quit;
 
21718      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21719      * Plot: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Plot: Computing metadata for TRAIN data;
21720      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.PLOT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Plot_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Plot_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Plot_TRAIN out=WORK.M2YXHU8V noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YXHU8V;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2YXHU8V(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2YXHU8V;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2YXHU8V;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M13_28CK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VUOVMJ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   set WORK.M13_28CK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.FIMPORT_train noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.FIMPORT_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Plot_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Plot";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Plot: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.PLOT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:06:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                August 07, 2022
Time:                16:06:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O108B_2Z "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Plot\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O108B_2Z new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
