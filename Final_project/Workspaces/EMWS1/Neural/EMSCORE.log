MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "August 07, 2022" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:04:21" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                August 07, 2022
Time:                16:04:21
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1MP_1O4 "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1MP_1O4 new;
MPRINT(EM_DIAGRAM):   run;
21860      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
21861      set EMWS1.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_OUTKEY;
21862      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
21863      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS1.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

21864      filename emflow "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21865      *------------------------------------------------------------*;
21866      * Neural: Scoring DATA data;
21867      *------------------------------------------------------------*;
21868      data EMWS1.Neural_TRAIN
21869      / view=EMWS1.Neural_TRAIN
21870      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_TRAIN / view=EMWS1.Neural_TRAIN ;
21871      set EMWS1.Impt_TRAIN
21872      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_TRAIN ;
21873      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
21874     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
21875     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
21876     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
21877     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
21878     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
21879     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
21880     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
21881     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
21882     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
21883     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
21884     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
21885     +LENGTH _WARN_ $4
21886     +      F_Class  $ 20
21887     +      I_Class  $ 20
21888     +      U_Class  $ 20
21889     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Class $ 20 I_Class $ 20 U_Class $ 20 ;
21890     +      label S_deg_malig = 'Standard: deg_malig' ;
MPRINT(EM_DIAGRAM):   label S_deg_malig = 'Standard: deg_malig' ;
21891     +
21892     +      label age20_29 = 'Dummy: age=20-29' ;
MPRINT(EM_DIAGRAM):   label age20_29 = 'Dummy: age=20-29' ;
21893     +
21894     +      label age30_39 = 'Dummy: age=30-39' ;
MPRINT(EM_DIAGRAM):   label age30_39 = 'Dummy: age=30-39' ;
21895     +
21896     +      label age40_49 = 'Dummy: age=40-49' ;
MPRINT(EM_DIAGRAM):   label age40_49 = 'Dummy: age=40-49' ;
21897     +
21898     +      label age50_59 = 'Dummy: age=50-59' ;
MPRINT(EM_DIAGRAM):   label age50_59 = 'Dummy: age=50-59' ;
21899     +
21900     +      label age60_69 = 'Dummy: age=60-69' ;
MPRINT(EM_DIAGRAM):   label age60_69 = 'Dummy: age=60-69' ;
21901     +
21902     +      label breastleft = 'Dummy: breast=left' ;
MPRINT(EM_DIAGRAM):   label breastleft = 'Dummy: breast=left' ;
21903     +
21904     +      label breast_quad_ = 'Dummy: breast_quad=?' ;
MPRINT(EM_DIAGRAM):   label breast_quad_ = 'Dummy: breast_quad=?' ;
21905     +
21906     +      label breast_quadcentral = 'Dummy: breast_quad=central' ;
MPRINT(EM_DIAGRAM):   label breast_quadcentral = 'Dummy: breast_quad=central' ;
21907     +
21908     +      label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
21909     +
21910     +      label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
21911     +
21912     +      label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
21913     +
21914     +      label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
MPRINT(EM_DIAGRAM):   label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
21915     +
21916     +      label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
MPRINT(EM_DIAGRAM):   label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
21917     +
21918     +      label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
MPRINT(EM_DIAGRAM):   label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
21919     +
21920     +      label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
MPRINT(EM_DIAGRAM):   label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
21921     +
21922     +      label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
MPRINT(EM_DIAGRAM):   label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
21923     +
21924     +      label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
MPRINT(EM_DIAGRAM):   label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
21925     +
21926     +      label irradiatno = 'Dummy: irradiat=no' ;
MPRINT(EM_DIAGRAM):   label irradiatno = 'Dummy: irradiat=no' ;
21927     +
21928     +      label menopausege40 = 'Dummy: menopause=ge40' ;
MPRINT(EM_DIAGRAM):   label menopausege40 = 'Dummy: menopause=ge40' ;
21929     +
21930     +      label menopauselt40 = 'Dummy: menopause=lt40' ;
MPRINT(EM_DIAGRAM):   label menopauselt40 = 'Dummy: menopause=lt40' ;
21931     +
21932     +      label node_caps_ = 'Dummy: node_caps=?' ;
MPRINT(EM_DIAGRAM):   label node_caps_ = 'Dummy: node_caps=?' ;
21933     +
21934     +      label node_capsno = 'Dummy: node_caps=no' ;
MPRINT(EM_DIAGRAM):   label node_capsno = 'Dummy: node_caps=no' ;
21935     +
21936     +      label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
MPRINT(EM_DIAGRAM):   label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
21937     +
21938     +      label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
MPRINT(EM_DIAGRAM):   label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
21939     +
21940     +      label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
MPRINT(EM_DIAGRAM):   label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
21941     +
21942     +      label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
MPRINT(EM_DIAGRAM):   label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
21943     +
21944     +      label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
MPRINT(EM_DIAGRAM):   label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
21945     +
21946     +      label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
MPRINT(EM_DIAGRAM):   label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
21947     +
21948     +      label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
MPRINT(EM_DIAGRAM):   label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
21949     +
21950     +      label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
MPRINT(EM_DIAGRAM):   label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
21951     +
21952     +      label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
MPRINT(EM_DIAGRAM):   label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
21953     +
21954     +      label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
MPRINT(EM_DIAGRAM):   label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
21955     +
21956     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
21957     +
21958     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
21959     +
21960     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
21961     +
21962     +      label I_Class = 'Into: Class' ;
MPRINT(EM_DIAGRAM):   label I_Class = 'Into: Class' ;
21963     +
21964     +      label F_Class = 'From: Class' ;
MPRINT(EM_DIAGRAM):   label F_Class = 'From: Class' ;
21965     +
21966     +      label U_Class = 'Unnormalized Into: Class' ;
MPRINT(EM_DIAGRAM):   label U_Class = 'Unnormalized Into: Class' ;
21967     +
21968     +      label P_Classrecurrence_events = 'Predicted: Class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_Classrecurrence_events = 'Predicted: Class=recurrence-events' ;
21969     +
21970     +      label R_Classrecurrence_events = 'Residual: Class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_Classrecurrence_events = 'Residual: Class=recurrence-events' ;
21971     +
21972     +      label P_Classno_recurrence_events =
21973     +'Predicted: Class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_Classno_recurrence_events = 'Predicted: Class=no-recurrence-events' ;
21974     +
21975     +      label R_Classno_recurrence_events =
21976     +'Residual: Class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_Classno_recurrence_events = 'Residual: Class=no-recurrence-events' ;
21977     +
21978     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
21979     +
21980     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
21981     +drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
MPRINT(EM_DIAGRAM):   drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
21982     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
21983     +age20_29 = 0;
MPRINT(EM_DIAGRAM):   age20_29 = 0;
21984     +age30_39 = 0;
MPRINT(EM_DIAGRAM):   age30_39 = 0;
21985     +age40_49 = 0;
MPRINT(EM_DIAGRAM):   age40_49 = 0;
21986     +age50_59 = 0;
MPRINT(EM_DIAGRAM):   age50_59 = 0;
21987     +age60_69 = 0;
MPRINT(EM_DIAGRAM):   age60_69 = 0;
21988     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
21989     +   age20_29 = .;
MPRINT(EM_DIAGRAM):   age20_29 = .;
21990     +   age30_39 = .;
MPRINT(EM_DIAGRAM):   age30_39 = .;
21991     +   age40_49 = .;
MPRINT(EM_DIAGRAM):   age40_49 = .;
21992     +   age50_59 = .;
MPRINT(EM_DIAGRAM):   age50_59 = .;
21993     +   age60_69 = .;
MPRINT(EM_DIAGRAM):   age60_69 = .;
21994     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
21995     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
21996     +end;
MPRINT(EM_DIAGRAM):   end;
21997     +else do;
MPRINT(EM_DIAGRAM):   else do;
21998     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
21999     +   _dm5 = put( age , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
22000     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-39' then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-29' then do;
MPRINT(EM_DIAGRAM):   age20_29 = 1;
22001     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22002     +   if _dm5 <= '40-49'  then do;
MPRINT(EM_DIAGRAM):   end;
22003     +      if _dm5 <= '30-39'  then do;
22004     +         if _dm5 = '20-29'  then do;
MPRINT(EM_DIAGRAM):   else do;
22005     +            age20_29 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
22006     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   age30_39 = 1;
22007     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22008     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22009     +            if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   end;
22010     +               age30_39 = 1;
22011     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22012     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
22013     +         end;
MPRINT(EM_DIAGRAM):   age40_49 = 1;
22014     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22015     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22016     +         if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   end;
22017     +            age40_49 = 1;
22018     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22019     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '60-69' then do;
22020     +      end;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
22021     +   end;
MPRINT(EM_DIAGRAM):   age50_59 = 1;
22022     +   else do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
22023     +      if _dm5 <= '60-69'  then do;
22024     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   else do;
22025     +            age50_59 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
22026     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   age60_69 = 1;
22027     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22028     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22029     +            if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   end;
22030     +               age60_69 = 1;
22031     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22032     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
22033     +         end;
MPRINT(EM_DIAGRAM):   age20_29 = -1;
22034     +      end;
MPRINT(EM_DIAGRAM):   age30_39 = -1;
22035     +      else do;
MPRINT(EM_DIAGRAM):   age40_49 = -1;
MPRINT(EM_DIAGRAM):   age50_59 = -1;
22036     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   age60_69 = -1;
22037     +            age20_29 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22038     +            age30_39 = -1;
MPRINT(EM_DIAGRAM):   end;
22039     +            age40_49 = -1;
MPRINT(EM_DIAGRAM):   end;
22040     +            age50_59 = -1;
MPRINT(EM_DIAGRAM):   end;
22041     +            age60_69 = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
22042     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   age20_29 = .;
22043     +         end;
MPRINT(EM_DIAGRAM):   age30_39 = .;
22044     +      end;
MPRINT(EM_DIAGRAM):   age40_49 = .;
22045     +   end;
MPRINT(EM_DIAGRAM):   age50_59 = .;
22046     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   age60_69 = .;
22047     +      age20_29 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22048     +      age30_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22049     +      age40_49 = .;
MPRINT(EM_DIAGRAM):   end;
22050     +      age50_59 = .;
MPRINT(EM_DIAGRAM):   end;
22051     +      age60_69 = .;
22052     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
22053     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop breastleft ;
22054     +   end;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
22055     +end;
MPRINT(EM_DIAGRAM):   breastleft = .;
22056     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22057     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22058     +drop breastleft ;
MPRINT(EM_DIAGRAM):   end;
22059     +if missing( breast ) then do;
22060     +   breastleft = .;
MPRINT(EM_DIAGRAM):   else do;
22061     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22062     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22063     +end;
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
22064     +else do;
22065     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMIP):   call dmnorm(_dm5,
22066     +   _dm5 = put( breast , $5. );
22067     +   %DMNORMIP( _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
MPRINT(EM_DIAGRAM):   breastleft = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
22068     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   breastleft = -1;
22069     +      breastleft = 1;
MPRINT(EM_DIAGRAM):   end;
22070     +   end;
22071     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   breastleft = .;
22072     +      breastleft = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22073     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22074     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22075     +      breastleft = .;
22076     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
22077     +      _DM_BAD = 1;
22078     +   end;
MPRINT(EM_DIAGRAM):   drop breast_quad_ breast_quadcentral breast_quadleft_low breast_quadleft_up breast_quadright_low ;
22079     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22080     +
MPRINT(EM_DIAGRAM):   breast_quad_ = 0;
22081     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 0;
22082     +drop breast_quad_ breast_quadcentral breast_quadleft_low breast_quadleft_up
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 0;
22083     +        breast_quadright_low ;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 0;
22084     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 0;
22085     +breast_quad_ = 0;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
22086     +breast_quadcentral = 0;
MPRINT(EM_DIAGRAM):   breast_quad_ = .;
22087     +breast_quadleft_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
22088     +breast_quadleft_up = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
22089     +breast_quadright_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
22090     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
22091     +   breast_quad_ = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22092     +   breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22093     +   breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   end;
22094     +   breast_quadleft_up = .;
22095     +   breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   else do;
22096     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
22097     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
22098     +end;
22099     +else do;
22100     +   length _dm9 $ 9; drop _dm9 ;
22101     +   %DMNORMCP( breast_quad , _dm9 )
MPRINT(DMNORMCP):   _dm9=dmnorm(breast_quad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_UP' then do;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_LOW' then do;
22102     +   if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 1;
22103     +      breast_quadleft_up = 1;
MPRINT(EM_DIAGRAM):   end;
22104     +   end;
22105     +   else if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
MPRINT(EM_DIAGRAM):   breast_quad_ = -1;
22106     +      breast_quadleft_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = -1;
22107     +   end;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = -1;
22108     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = -1;
MPRINT(EM_DIAGRAM):   breast_quadright_low = -1;
22109     +      breast_quad_ = -1;
MPRINT(EM_DIAGRAM):   end;
22110     +      breast_quadcentral = -1;
22111     +      breast_quadleft_low = -1;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
22112     +      breast_quadleft_up = -1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 1;
22113     +      breast_quadright_low = -1;
MPRINT(EM_DIAGRAM):   end;
22114     +   end;
22115     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 1;
22116     +      breast_quadcentral = 1;
MPRINT(EM_DIAGRAM):   end;
22117     +   end;
22118     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = '?' then do;
MPRINT(EM_DIAGRAM):   breast_quad_ = 1;
22119     +      breast_quadright_low = 1;
MPRINT(EM_DIAGRAM):   end;
22120     +   end;
22121     +   else if _dm9 = '?'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   breast_quad_ = .;
22122     +      breast_quad_ = 1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
22123     +   end;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
22124     +   else do;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
22125     +      breast_quad_ = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22126     +      breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22127     +      breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   end;
22128     +      breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   end;
22129     +      breast_quadright_low = .;
22130     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
22131     +      _DM_BAD = 1;
22132     +   end;
MPRINT(EM_DIAGRAM):   drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 inv_nodes3_5 inv_nodes6_8 ;
22133     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22134     +
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 0;
22135     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 0;
22136     +drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 inv_nodes3_5
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 0;
22137     +        inv_nodes6_8 ;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 0;
22138     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 0;
22139     +inv_nodes0_2 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 0;
22140     +inv_nodes12_14 = 0;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
22141     +inv_nodes15_17 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
22142     +inv_nodes24_26 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
22143     +inv_nodes3_5 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
22144     +inv_nodes6_8 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
22145     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
22146     +   inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
22147     +   inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22148     +   inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22149     +   inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   end;
22150     +   inv_nodes3_5 = .;
22151     +   inv_nodes6_8 = .;
MPRINT(EM_DIAGRAM):   else do;
22152     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22153     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22154     +end;
22155     +else do;
22156     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMCP):   _dm5=dmnorm(inv_nodes,
22157     +   %DMNORMCP( inv_nodes , _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm5 = '3-5' then do;
22158     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 1;
22159     +      inv_nodes0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
22160     +   end;
22161     +   else if _dm5 = '3-5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '6-8' then do;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 1;
22162     +      inv_nodes3_5 = 1;
MPRINT(EM_DIAGRAM):   end;
22163     +   end;
22164     +   else if _dm5 = '6-8'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 1;
22165     +      inv_nodes6_8 = 1;
MPRINT(EM_DIAGRAM):   end;
22166     +   end;
22167     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '9-11' then do;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = -1;
22168     +      inv_nodes15_17 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = -1;
22169     +   end;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = -1;
22170     +   else if _dm5 = '9-11'  then do;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = -1;
22171     +      inv_nodes0_2 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = -1;
22172     +      inv_nodes12_14 = -1;
MPRINT(EM_DIAGRAM):   end;
22173     +      inv_nodes15_17 = -1;
22174     +      inv_nodes24_26 = -1;
MPRINT(EM_DIAGRAM):   else if _dm5 = '12-14' then do;
22175     +      inv_nodes3_5 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 1;
22176     +      inv_nodes6_8 = -1;
MPRINT(EM_DIAGRAM):   end;
22177     +   end;
22178     +   else if _dm5 = '12-14'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 1;
22179     +      inv_nodes12_14 = 1;
MPRINT(EM_DIAGRAM):   end;
22180     +   end;
22181     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
22182     +      inv_nodes24_26 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
22183     +   end;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
22184     +   else do;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
22185     +      inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
22186     +      inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22187     +      inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22188     +      inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   end;
22189     +      inv_nodes3_5 = .;
MPRINT(EM_DIAGRAM):   end;
22190     +      inv_nodes6_8 = .;
22191     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
22192     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop irradiatno ;
22193     +   end;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
22194     +end;
MPRINT(EM_DIAGRAM):   irradiatno = .;
22195     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22196     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22197     +drop irradiatno ;
MPRINT(EM_DIAGRAM):   end;
22198     +if missing( irradiat ) then do;
22199     +   irradiatno = .;
MPRINT(EM_DIAGRAM):   else do;
22200     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
22201     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
22202     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
22203     +else do;
22204     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
22205     +   _dm3 = put( irradiat , $3. );
22206     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
MPRINT(EM_DIAGRAM):   irradiatno = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
22207     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   irradiatno = -1;
22208     +      irradiatno = 1;
MPRINT(EM_DIAGRAM):   end;
22209     +   end;
22210     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   irradiatno = .;
22211     +      irradiatno = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22212     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22213     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22214     +      irradiatno = .;
22215     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
22216     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop menopausege40 menopauselt40 ;
22217     +   end;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
22218     +end;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
22219     +
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
22220     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22221     +drop menopausege40 menopauselt40 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22222     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   end;
22223     +   menopausege40 = .;
22224     +   menopauselt40 = .;
MPRINT(EM_DIAGRAM):   else do;
22225     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
22226     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
22227     +end;
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
22228     +else do;
22229     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(DMNORMIP):   call dmnorm(_dm7,
22230     +   _dm7 = put( menopause , $7. );
22231     +   %DMNORMIP( _dm7 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
MPRINT(EM_DIAGRAM):   menopausege40 = -1;
MPRINT(EM_DIAGRAM):   menopauselt40 = -1;
MPRINT(EM_DIAGRAM):   end;
22232     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
22233     +      menopausege40 = -1;
MPRINT(EM_DIAGRAM):   menopausege40 = 1;
22234     +      menopauselt40 = -1;
MPRINT(EM_DIAGRAM):   menopauselt40 = 0;
22235     +   end;
MPRINT(EM_DIAGRAM):   end;
22236     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
22237     +      menopausege40 = 1;
MPRINT(EM_DIAGRAM):   menopausege40 = 0;
22238     +      menopauselt40 = 0;
MPRINT(EM_DIAGRAM):   menopauselt40 = 1;
22239     +   end;
MPRINT(EM_DIAGRAM):   end;
22240     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else do;
22241     +      menopausege40 = 0;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
22242     +      menopauselt40 = 1;
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
22243     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22244     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
22245     +      menopausege40 = .;
MPRINT(EM_DIAGRAM):   end;
22246     +      menopauselt40 = .;
22247     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for node_caps ;
22248     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop node_caps_ node_capsno ;
22249     +   end;
MPRINT(EM_DIAGRAM):   if missing( node_caps ) then do;
22250     +end;
MPRINT(EM_DIAGRAM):   node_caps_ = .;
22251     +
MPRINT(EM_DIAGRAM):   node_capsno = .;
22252     +*** Generate dummy variables for node_caps ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22253     +drop node_caps_ node_capsno ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22254     +if missing( node_caps ) then do;
MPRINT(EM_DIAGRAM):   end;
22255     +   node_caps_ = .;
22256     +   node_capsno = .;
MPRINT(EM_DIAGRAM):   else do;
22257     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
22258     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
22259     +end;
22260     +else do;
22261     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMCP):   _dm3=dmnorm(node_caps,
22262     +   %DMNORMCP( node_caps , _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
MPRINT(EM_DIAGRAM):   node_caps_ = 0;
MPRINT(EM_DIAGRAM):   node_capsno = 1;
MPRINT(EM_DIAGRAM):   end;
22263     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
22264     +      node_caps_ = 0;
MPRINT(EM_DIAGRAM):   node_caps_ = -1;
22265     +      node_capsno = 1;
MPRINT(EM_DIAGRAM):   node_capsno = -1;
22266     +   end;
MPRINT(EM_DIAGRAM):   end;
22267     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '?' then do;
22268     +      node_caps_ = -1;
MPRINT(EM_DIAGRAM):   node_caps_ = 1;
22269     +      node_capsno = -1;
MPRINT(EM_DIAGRAM):   node_capsno = 0;
22270     +   end;
MPRINT(EM_DIAGRAM):   end;
22271     +   else if _dm3 = '?'  then do;
MPRINT(EM_DIAGRAM):   else do;
22272     +      node_caps_ = 1;
MPRINT(EM_DIAGRAM):   node_caps_ = .;
22273     +      node_capsno = 0;
MPRINT(EM_DIAGRAM):   node_capsno = .;
22274     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22275     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
22276     +      node_caps_ = .;
MPRINT(EM_DIAGRAM):   end;
22277     +      node_capsno = .;
22278     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
22279     +      _DM_BAD = 1;
22280     +   end;
22281     +end;
MPRINT(EM_DIAGRAM):   drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24 tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44 tumor_size45_49 tumor_size5_9 ;
22282     +
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22283     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 0;
22284     +drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 0;
22285     +        tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 0;
22286     +        tumor_size45_49 tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 0;
22287     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 0;
22288     +tumor_size0_4 = 0;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 0;
22289     +tumor_size10_14 = 0;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 0;
22290     +tumor_size15_19 = 0;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 0;
22291     +tumor_size20_24 = 0;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 0;
22292     +tumor_size25_29 = 0;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 0;
22293     +tumor_size30_34 = 0;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
22294     +tumor_size35_39 = 0;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
22295     +tumor_size40_44 = 0;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
22296     +tumor_size45_49 = 0;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
22297     +tumor_size5_9 = 0;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
22298     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
22299     +   tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
22300     +   tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
22301     +   tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
22302     +   tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
22303     +   tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
22304     +   tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22305     +   tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22306     +   tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   end;
22307     +   tumor_size45_49 = .;
22308     +   tumor_size5_9 = .;
MPRINT(EM_DIAGRAM):   else do;
22309     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
22310     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22311     +end;
22312     +else do;
22313     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(DMNORMCP):   _dm5=dmnorm(tumor_size,
22314     +   %DMNORMCP( tumor_size , _dm5 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '10-14' then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
22315     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 1;
22316     +   if _dm5 <= '30-34'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22317     +      if _dm5 <= '15-19'  then do;
MPRINT(EM_DIAGRAM):   end;
22318     +         if _dm5 <= '10-14'  then do;
22319     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   else do;
22320     +               tumor_size0_4 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '10-14' then do;
22321     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 1;
22322     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22323     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22324     +               if _dm5 = '10-14'  then do;
MPRINT(EM_DIAGRAM):   end;
22325     +                  tumor_size10_14 = 1;
22326     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22327     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
22328     +            end;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 1;
22329     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22330     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22331     +            if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   end;
22332     +               tumor_size15_19 = 1;
22333     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22334     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '25-29' then do;
22335     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
22336     +      end;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 1;
22337     +      else do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
22338     +         if _dm5 <= '25-29'  then do;
22339     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   else do;
22340     +               tumor_size20_24 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
22341     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 1;
22342     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22343     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22344     +               if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   end;
22345     +                  tumor_size25_29 = 1;
22346     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22347     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
22348     +            end;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 1;
22349     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22350     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22351     +            if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   end;
22352     +               tumor_size30_34 = 1;
MPRINT(EM_DIAGRAM):   end;
22353     +               _dm_find = 1;
22354     +            end;
MPRINT(EM_DIAGRAM):   else do;
22355     +         end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '45-49' then do;
22356     +      end;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-44' then do;
22357     +   end;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
22358     +   else do;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22359     +      if _dm5 <= '45-49'  then do;
MPRINT(EM_DIAGRAM):   end;
22360     +         if _dm5 <= '40-44'  then do;
22361     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   else do;
22362     +               tumor_size35_39 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
22363     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 1;
22364     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22365     +            else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22366     +               if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   end;
22367     +                  tumor_size40_44 = 1;
22368     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22369     +               end;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
22370     +            end;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 1;
22371     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22372     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
22373     +            if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   end;
22374     +               tumor_size45_49 = 1;
22375     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
22376     +            end;
MPRINT(EM_DIAGRAM):   if _dm5 = '5-9' then do;
22377     +         end;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 1;
22378     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22379     +      else do;
MPRINT(EM_DIAGRAM):   end;
22380     +         if _dm5 = '5-9'  then do;
MPRINT(EM_DIAGRAM):   else do;
22381     +            tumor_size5_9 = 1;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
22382     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = -1;
22383     +         end;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = -1;
22384     +         else do;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = -1;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = -1;
22385     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = -1;
22386     +               tumor_size0_4 = -1;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = -1;
22387     +               tumor_size10_14 = -1;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = -1;
22388     +               tumor_size15_19 = -1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = -1;
22389     +               tumor_size20_24 = -1;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = -1;
22390     +               tumor_size25_29 = -1;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = -1;
22391     +               tumor_size30_34 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22392     +               tumor_size35_39 = -1;
MPRINT(EM_DIAGRAM):   end;
22393     +               tumor_size40_44 = -1;
MPRINT(EM_DIAGRAM):   end;
22394     +               tumor_size45_49 = -1;
MPRINT(EM_DIAGRAM):   end;
22395     +               tumor_size5_9 = -1;
MPRINT(EM_DIAGRAM):   end;
22396     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
22397     +            end;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
22398     +         end;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
22399     +      end;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
22400     +   end;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
22401     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
22402     +      tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
22403     +      tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
22404     +      tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
22405     +      tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
22406     +      tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
22407     +      tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22408     +      tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22409     +      tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   end;
22410     +      tumor_size45_49 = .;
MPRINT(EM_DIAGRAM):   end;
22411     +      tumor_size5_9 = .;
22412     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
22413     +      _DM_BAD = 1;
22414     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
22415     +end;
22416     +
22417     +*** *************************;
MPRINT(EM_DIAGRAM):   IF NMISS( deg_malig ) THEN DO;
22418     +*** Checking missing input Interval
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
22419     +*** *************************;
22420     +
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22421     +IF NMISS(
MPRINT(EM_DIAGRAM):   END;
22422     +   deg_malig   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
22423     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
22424     +
MPRINT(EM_DIAGRAM):   *** *************************;
22425     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
22426     +END;
MPRINT(EM_DIAGRAM):   S_deg_malig = -2.78253429049127 + 1.35716746031314 * deg_malig ;
22427     +*** *************************;
MPRINT(EM_DIAGRAM):   END;
22428     +*** Writing the Node intvl ;
22429     +*** *************************;
MPRINT(EM_DIAGRAM):   ELSE DO;
22430     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( deg_malig ) THEN S_deg_malig = . ;
22431     +   S_deg_malig  =    -2.78253429049127 +     1.35716746031314 * deg_malig ;
22432     +END;
22433     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_deg_malig = -2.78253429049127 + 1.35716746031314 * deg_malig ;
MPRINT(EM_DIAGRAM):   END;
22434     +   IF MISSING( deg_malig ) THEN S_deg_malig  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
22435     +   ELSE S_deg_malig  =    -2.78253429049127 +     1.35716746031314 * deg_malig
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
22436     +         ;
MPRINT(EM_DIAGRAM):   *** *************************;
22437     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
22438     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
22439     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
22440     +*** *************************;
MPRINT(EM_DIAGRAM):   H11 = -2.74796971637258 * S_deg_malig ;
22441     +*** *************************;
MPRINT(EM_DIAGRAM):   H12 = -1.14470380880618 * S_deg_malig ;
22442     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   H13 = -0.05499579882751 * S_deg_malig ;
22443     +*** *************************;
22444     +IF _DM_BAD EQ 0 THEN DO;
22445     +   H11  =    -2.74796971637258 * S_deg_malig ;
22446     +   H12  =    -1.14470380880618 * S_deg_malig ;
22447     +   H13  =    -0.05499579882751 * S_deg_malig ;
22448     +   H11  = H11  +    -0.29476277137846 * age20_29  +      -0.010366167334 *
22449     +        age30_39  +    -0.17555609047413 * age40_49  +     0.11413435552706 *
22450     +        age50_59  +    -0.06117744625175 * age60_69  +     -0.5368742297391 *
22451     +        breastleft  +    -0.24218262404951 * breast_quad_
22452     +          +     0.06068411466854 * breast_quadcentral
22453     +          +     0.97640815123223 * breast_quadleft_low
22454     +          +     0.67644175699563 * breast_quadleft_up
22455     +          +     0.17789865004419 * breast_quadright_low
22456     +          +     2.55134897365733 * inv_nodes0_2  +     0.21424158811054 *
22457     +        inv_nodes12_14  +     0.47820995623683 * inv_nodes15_17
22458     +          +      0.2622943817266 * inv_nodes24_26  +     0.12643888087769 *
22459     +        inv_nodes3_5  +     0.84201931474903 * inv_nodes6_8
22460     +          +     1.04760396339187 * irradiatno  +     0.07463094979299 *
22461     +        menopausege40  +    -0.44581886051603 * menopauselt40
22462     +          +    -0.87854603983125 * node_caps_  +      0.4570771968374 *
22463     +        node_capsno  +     0.37381802079042 * tumor_size0_4
22464     +          +     0.85670494080923 * tumor_size10_14  +     0.44903004755901 *
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.29476277137846 * age20_29 + -0.010366167334 * age30_39 + -0.17555609047413 * age40_49 + 0.11413435552706 * age50_59 + -0.06117744625175 * age60_69 + -0.5368742297391 * breastleft + -0.24218262404951 * breast_quad_ + 
0.06068411466854 * breast_quadcentral + 0.97640815123223 * breast_quadleft_low + 0.67644175699563 * breast_quadleft_up + 0.17789865004419 * breast_quadright_low + 2.55134897365733 * inv_nodes0_2 + 0.21424158811054 * inv_nodes12_14 + 0.47820995623683 * 
inv_nodes15_17 + 0.2622943817266 * inv_nodes24_26 + 0.12643888087769 * inv_nodes3_5 + 0.84201931474903 * inv_nodes6_8 + 1.04760396339187 * irradiatno + 0.07463094979299 * menopausege40 + -0.44581886051603 * menopauselt40 + -0.87854603983125 * node_caps_ + 
0.4570771968374 * node_capsno + 0.37381802079042 * tumor_size0_4 + 0.85670494080923 * tumor_size10_14 + 0.44903004755901 * tumor_size15_19 + -0.17074053785079 * tumor_size20_24 + 0.06170619904789 * tumor_size25_29 + -0.59125038030471 * tumor_size30_34 + 
0.83829482457373 * tumor_size35_39 + 0.62726406774169 * tumor_size40_44 + -0.1516346314299 * tumor_size45_49 + 0.52677539133351 * tumor_size5_9 ;
22465     +        tumor_size15_19  +    -0.17074053785079 * tumor_size20_24
22466     +          +     0.06170619904789 * tumor_size25_29  +    -0.59125038030471 *
22467     +        tumor_size30_34  +     0.83829482457373 * tumor_size35_39
22468     +          +     0.62726406774169 * tumor_size40_44  +     -0.1516346314299 *
22469     +        tumor_size45_49  +     0.52677539133351 * tumor_size5_9 ;
22470     +   H12  = H12  +     0.13027205331591 * age20_29  +    -0.06449783231378 *
22471     +        age30_39  +     0.05824555950222 * age40_49  +     0.59985459190818 *
22472     +        age50_59  +    -0.09738234999184 * age60_69  +     -1.1326563834081 *
22473     +        breastleft  +    -0.09133694414179 * breast_quad_
22474     +          +     0.28807861638446 * breast_quadcentral
22475     +          +     0.59779800988374 * breast_quadleft_low
22476     +          +     1.55322081055081 * breast_quadleft_up
22477     +          +    -0.90745863860562 * breast_quadright_low
22478     +          +      1.5776159015562 * inv_nodes0_2  +    -0.78963665052233 *
22479     +        inv_nodes12_14  +    -0.10914927602566 * inv_nodes15_17
22480     +          +      -0.287641916432 * inv_nodes24_26  +    -0.37759361721497 *
22481     +        inv_nodes3_5  +    -0.89487912276378 * inv_nodes6_8
22482     +          +      1.2533273720272 * irradiatno  +    -0.50422727076849 *
22483     +        menopausege40  +    -0.63949610800281 * menopauselt40
22484     +          +    -0.32842346590983 * node_caps_  +      0.1614812996979 *
22485     +        node_capsno  +     0.15444034413128 * tumor_size0_4
22486     +          +     0.28921143447212 * tumor_size10_14  +     0.93609534347786 *
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.13027205331591 * age20_29 + -0.06449783231378 * age30_39 + 0.05824555950222 * age40_49 + 0.59985459190818 * age50_59 + -0.09738234999184 * age60_69 + -1.1326563834081 * breastleft + -0.09133694414179 * breast_quad_ + 
0.28807861638446 * breast_quadcentral + 0.59779800988374 * breast_quadleft_low + 1.55322081055081 * breast_quadleft_up + -0.90745863860562 * breast_quadright_low + 1.5776159015562 * inv_nodes0_2 + -0.78963665052233 * inv_nodes12_14 + -0.10914927602566 * 
inv_nodes15_17 + -0.287641916432 * inv_nodes24_26 + -0.37759361721497 * inv_nodes3_5 + -0.89487912276378 * inv_nodes6_8 + 1.2533273720272 * irradiatno + -0.50422727076849 * menopausege40 + -0.63949610800281 * menopauselt40 + -0.32842346590983 * node_caps_ 
+ 0.1614812996979 * node_capsno + 0.15444034413128 * tumor_size0_4 + 0.28921143447212 * tumor_size10_14 + 0.93609534347786 * tumor_size15_19 + -0.74160696513512 * tumor_size20_24 + -0.19349501615176 * tumor_size25_29 + 0.1936345135719 * tumor_size30_34 + 
0.72690837246592 * tumor_size35_39 + 0.1908875766776 * tumor_size40_44 + -0.11883017715484 * tumor_size45_49 + -0.13109284581539 * tumor_size5_9 ;
22487     +        tumor_size15_19  +    -0.74160696513512 * tumor_size20_24
22488     +          +    -0.19349501615176 * tumor_size25_29  +      0.1936345135719 *
22489     +        tumor_size30_34  +     0.72690837246592 * tumor_size35_39
22490     +          +      0.1908875766776 * tumor_size40_44  +    -0.11883017715484 *
22491     +        tumor_size45_49  +    -0.13109284581539 * tumor_size5_9 ;
22492     +   H13  = H13  +     0.36211839764495 * age20_29  +     0.84571236618358 *
22493     +        age30_39  +    -0.11526347756118 * age40_49  +    -0.04128901011994 *
22494     +        age50_59  +     1.68133643204135 * age60_69  +     0.00813386538131 *
22495     +        breastleft  +     0.53916416059169 * breast_quad_
22496     +          +    -0.08864316260341 * breast_quadcentral
22497     +          +     0.82661415499999 * breast_quadleft_low
22498     +          +     0.71121038673087 * breast_quadleft_up
22499     +          +    -0.82432838124419 * breast_quadright_low
22500     +          +     0.17248835987059 * inv_nodes0_2  +     0.64053633216674 *
22501     +        inv_nodes12_14  +     0.46832383814205 * inv_nodes15_17
22502     +          +     0.34052933199292 * inv_nodes24_26  +     0.51774207100072 *
22503     +        inv_nodes3_5  +     0.22081734421893 * inv_nodes6_8
22504     +          +     0.33158040157428 * irradiatno  +    -0.33994674936188 *
22505     +        menopausege40  +    -0.23106138538014 * menopauselt40
22506     +          +    -0.82389546223861 * node_caps_  +    -0.12001895544508 *
22507     +        node_capsno  +    -0.91622770269526 * tumor_size0_4
22508     +          +    -2.52443038295481 * tumor_size10_14  +    -1.02411778324248 *
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.36211839764495 * age20_29 + 0.84571236618358 * age30_39 + -0.11526347756118 * age40_49 + -0.04128901011994 * age50_59 + 1.68133643204135 * age60_69 + 0.00813386538131 * breastleft + 0.53916416059169 * breast_quad_ + 
-0.08864316260341 * breast_quadcentral + 0.82661415499999 * breast_quadleft_low + 0.71121038673087 * breast_quadleft_up + -0.82432838124419 * breast_quadright_low + 0.17248835987059 * inv_nodes0_2 + 0.64053633216674 * inv_nodes12_14 + 0.46832383814205 * 
inv_nodes15_17 + 0.34052933199292 * inv_nodes24_26 + 0.51774207100072 * inv_nodes3_5 + 0.22081734421893 * inv_nodes6_8 + 0.33158040157428 * irradiatno + -0.33994674936188 * menopausege40 + -0.23106138538014 * menopauselt40 + -0.82389546223861 * node_caps_ 
+ -0.12001895544508 * node_capsno + -0.91622770269526 * tumor_size0_4 + -2.52443038295481 * tumor_size10_14 + -1.02411778324248 * tumor_size15_19 + 1.98266427103372 * tumor_size20_24 + 0.64855674824922 * tumor_size25_29 + 0.40177088900283 * 
tumor_size30_34 + -0.3840784388992 * tumor_size35_39 + -1.50455217684477 * tumor_size40_44 + 0.95362832752501 * tumor_size45_49 + -0.76716804997565 * tumor_size5_9 ;
22509     +        tumor_size15_19  +     1.98266427103372 * tumor_size20_24
MPRINT(EM_DIAGRAM):   H11 = 1.16497275748927 + H11 ;
22510     +          +     0.64855674824922 * tumor_size25_29  +     0.40177088900283 *
MPRINT(EM_DIAGRAM):   H12 = 3.06145127542367 + H12 ;
22511     +        tumor_size30_34  +     -0.3840784388992 * tumor_size35_39
MPRINT(EM_DIAGRAM):   H13 = 1.14117810063498 + H13 ;
22512     +          +    -1.50455217684477 * tumor_size40_44  +     0.95362832752501 *
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
22513     +        tumor_size45_49  +    -0.76716804997565 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
22514     +   H11  =     1.16497275748927 + H11 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
22515     +   H12  =     3.06145127542367 + H12 ;
MPRINT(EM_DIAGRAM):   END;
22516     +   H13  =     1.14117810063498 + H13 ;
22517     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   ELSE DO;
22518     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H11 = .;
22519     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H12 = .;
22520     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
22521     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
22522     +   H11  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node Class ;
22523     +   H12  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
22524     +   H13  = .;
22525     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Class ;
22526     +*** *************************;
MPRINT(EM_DIAGRAM):   drop Classrecurrence_events Classno_recurrence_events ;
22527     +*** Writing the Node Class ;
MPRINT(EM_DIAGRAM):   label F_Class = 'From: Class' ;
22528     +*** *************************;
22529     +
MPRINT(EM_DIAGRAM):   length F_Class $ 20;
22530     +*** Generate dummy variables for Class ;
22531     +drop Classrecurrence_events Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   F_Class = put( Class , $20. );
22532     +label F_Class = 'From: Class' ;
22533     +length F_Class $ 20;
MPRINT(DMNORMIP):   call dmnorm(F_Class,
22534     +F_Class = put( Class , $20. );
22535     +%DMNORMIP( F_Class )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( Class ) then do;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   end;
22536     +if missing( Class ) then do;
MPRINT(EM_DIAGRAM):   else do;
22537     +   Classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   if F_Class = 'NO-RECURRENCE-EVENTS' then do;
22538     +   Classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = 0;
22539     +end;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = 1;
22540     +else do;
MPRINT(EM_DIAGRAM):   end;
22541     +   if F_Class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else if F_Class = 'RECURRENCE-EVENTS' then do;
22542     +      Classrecurrence_events = 0;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = 1;
22543     +      Classno_recurrence_events = 1;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = 0;
22544     +   end;
MPRINT(EM_DIAGRAM):   end;
22545     +   else if F_Class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else do;
22546     +      Classrecurrence_events = 1;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = .;
22547     +      Classno_recurrence_events = 0;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = .;
22548     +   end;
MPRINT(EM_DIAGRAM):   end;
22549     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
22550     +      Classrecurrence_events = .;
22551     +      Classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = -4.90336136114846 * H11 + -13.4892200433884 * H12 + 16.7487792253409 * H13 ;
22552     +   end;
22553     +end;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = 0.57881101949988 + P_Classrecurrence_events ;
22554     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = 0;
22555     +   P_Classrecurrence_events  =    -4.90336136114846 * H11
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Classrecurrence_events , P_Classno_recurrence_events );
22556     +          +    -13.4892200433884 * H12  +     16.7487792253409 * H13 ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
22557     +   P_Classrecurrence_events  =     0.57881101949988 + P_Classrecurrence_events
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = EXP(P_Classrecurrence_events - _MAX_);
22558     +         ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Classrecurrence_events ;
22559     +   P_Classno_recurrence_events  = 0;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = EXP(P_Classno_recurrence_events - _MAX_);
22560     +   _MAX_ = MAX (P_Classrecurrence_events , P_Classno_recurrence_events );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Classno_recurrence_events ;
22561     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = P_Classrecurrence_events / _SUM_;
22562     +   P_Classrecurrence_events  = EXP(P_Classrecurrence_events  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = P_Classno_recurrence_events / _SUM_;
22563     +   _SUM_ = _SUM_ + P_Classrecurrence_events ;
MPRINT(EM_DIAGRAM):   END;
22564     +   P_Classno_recurrence_events  = EXP(P_Classno_recurrence_events  - _MAX_);
22565     +   _SUM_ = _SUM_ + P_Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE DO;
22566     +   P_Classrecurrence_events  = P_Classrecurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = .;
22567     +   P_Classno_recurrence_events  = P_Classno_recurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = .;
22568     +END;
MPRINT(EM_DIAGRAM):   END;
22569     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = 0.2964824120603;
22570     +   P_Classrecurrence_events  = .;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = 0.70351758793969;
22571     +   P_Classno_recurrence_events  = .;
MPRINT(EM_DIAGRAM):   END;
22572     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
22573     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Class ;
22574     +   P_Classrecurrence_events  =      0.2964824120603;
MPRINT(EM_DIAGRAM):   *** ******************************;
22575     +   P_Classno_recurrence_events  =     0.70351758793969;
MPRINT(EM_DIAGRAM):   IF MISSING( Classrecurrence_events ) THEN R_Classrecurrence_events = . ;
22576     +END;
22577     +*** *****************************;
22578     +*** Writing the Residuals  of the Node Class ;
MPRINT(EM_DIAGRAM):   ELSE R_Classrecurrence_events = Classrecurrence_events - P_Classrecurrence_events ;
22579     +*** ******************************;
22580     +IF MISSING( Classrecurrence_events ) THEN R_Classrecurrence_events  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Classno_recurrence_events ) THEN R_Classno_recurrence_events = . ;
22581     +ELSE R_Classrecurrence_events  = Classrecurrence_events  -
22582     +        P_Classrecurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE R_Classno_recurrence_events = Classno_recurrence_events - P_Classno_recurrence_events ;
22583     +IF MISSING( Classno_recurrence_events ) THEN R_Classno_recurrence_events
MPRINT(EM_DIAGRAM):   *** *************************;
22584     +          = . ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Class AND U_Class ;
22585     +ELSE R_Classno_recurrence_events  = Classno_recurrence_events  -
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Classrecurrence_events ;
22586     +        P_Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   I_Class = "RECURRENCE-EVENTS   " ;
22587     +*** *************************;
MPRINT(EM_DIAGRAM):   U_Class = "recurrence-events   " ;
22588     +*** Writing the I_Class  AND U_Class ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Classno_recurrence_events ) THEN DO;
22589     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Classno_recurrence_events ;
22590     +_MAXP_ = P_Classrecurrence_events ;
MPRINT(EM_DIAGRAM):   I_Class = "NO-RECURRENCE-EVENTS" ;
22591     +I_Class  = "RECURRENCE-EVENTS   " ;
MPRINT(EM_DIAGRAM):   U_Class = "no-recurrence-events" ;
22592     +U_Class  = "recurrence-events   " ;
MPRINT(EM_DIAGRAM):   END;
22593     +IF( _MAXP_ LT P_Classno_recurrence_events  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
22594     +   _MAXP_ = P_Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
22595     +   I_Class  = "NO-RECURRENCE-EVENTS" ;
MPRINT(EM_DIAGRAM):   ********************************;
22596     +   U_Class  = "no-recurrence-events" ;
22597     +END;
22598     +********************************;
22599     +*** End Scoring Code for Neural;
22600     +********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
22601     +drop
MPRINT(EM_DIAGRAM):   drop S_:;
22602     +H11
22603     +H12
22604     +H13
22605     +;
22606     +drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22607      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
22608      quit;
22609      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22610      filename emflow "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22611      *------------------------------------------------------------*;
22612      * Neural: Scoring VALIDATE data;
22613      *------------------------------------------------------------*;
22614      data EMWS1.Neural_VALIDATE
22615      / view=EMWS1.Neural_VALIDATE
22616      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_VALIDATE / view=EMWS1.Neural_VALIDATE ;
22617      set EMWS1.Impt_VALIDATE
22618      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_VALIDATE ;
22619      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\EMFLOWSCORE.sas.
22620     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
22621     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
22622     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
22623     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
22624     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
22625     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
22626     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
22627     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
22628     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
22629     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
22630     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
22631     +LENGTH _WARN_ $4
22632     +      F_Class  $ 20
22633     +      I_Class  $ 20
22634     +      U_Class  $ 20
22635     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_Class $ 20 I_Class $ 20 U_Class $ 20 ;
22636     +      label S_deg_malig = 'Standard: deg_malig' ;
MPRINT(EM_DIAGRAM):   label S_deg_malig = 'Standard: deg_malig' ;
22637     +
22638     +      label age20_29 = 'Dummy: age=20-29' ;
MPRINT(EM_DIAGRAM):   label age20_29 = 'Dummy: age=20-29' ;
22639     +
22640     +      label age30_39 = 'Dummy: age=30-39' ;
MPRINT(EM_DIAGRAM):   label age30_39 = 'Dummy: age=30-39' ;
22641     +
22642     +      label age40_49 = 'Dummy: age=40-49' ;
MPRINT(EM_DIAGRAM):   label age40_49 = 'Dummy: age=40-49' ;
22643     +
22644     +      label age50_59 = 'Dummy: age=50-59' ;
MPRINT(EM_DIAGRAM):   label age50_59 = 'Dummy: age=50-59' ;
22645     +
22646     +      label age60_69 = 'Dummy: age=60-69' ;
MPRINT(EM_DIAGRAM):   label age60_69 = 'Dummy: age=60-69' ;
22647     +
22648     +      label breastleft = 'Dummy: breast=left' ;
MPRINT(EM_DIAGRAM):   label breastleft = 'Dummy: breast=left' ;
22649     +
22650     +      label breast_quad_ = 'Dummy: breast_quad=?' ;
MPRINT(EM_DIAGRAM):   label breast_quad_ = 'Dummy: breast_quad=?' ;
22651     +
22652     +      label breast_quadcentral = 'Dummy: breast_quad=central' ;
MPRINT(EM_DIAGRAM):   label breast_quadcentral = 'Dummy: breast_quad=central' ;
22653     +
22654     +      label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_low = 'Dummy: breast_quad=left_low' ;
22655     +
22656     +      label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
MPRINT(EM_DIAGRAM):   label breast_quadleft_up = 'Dummy: breast_quad=left_up' ;
22657     +
22658     +      label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
MPRINT(EM_DIAGRAM):   label breast_quadright_low = 'Dummy: breast_quad=right_low' ;
22659     +
22660     +      label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
MPRINT(EM_DIAGRAM):   label inv_nodes0_2 = 'Dummy: inv_nodes=0-2' ;
22661     +
22662     +      label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
MPRINT(EM_DIAGRAM):   label inv_nodes12_14 = 'Dummy: inv_nodes=12-14' ;
22663     +
22664     +      label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
MPRINT(EM_DIAGRAM):   label inv_nodes15_17 = 'Dummy: inv_nodes=15-17' ;
22665     +
22666     +      label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
MPRINT(EM_DIAGRAM):   label inv_nodes24_26 = 'Dummy: inv_nodes=24-26' ;
22667     +
22668     +      label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
MPRINT(EM_DIAGRAM):   label inv_nodes3_5 = 'Dummy: inv_nodes=3-5' ;
22669     +
22670     +      label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
MPRINT(EM_DIAGRAM):   label inv_nodes6_8 = 'Dummy: inv_nodes=6-8' ;
22671     +
22672     +      label irradiatno = 'Dummy: irradiat=no' ;
MPRINT(EM_DIAGRAM):   label irradiatno = 'Dummy: irradiat=no' ;
22673     +
22674     +      label menopausege40 = 'Dummy: menopause=ge40' ;
MPRINT(EM_DIAGRAM):   label menopausege40 = 'Dummy: menopause=ge40' ;
22675     +
22676     +      label menopauselt40 = 'Dummy: menopause=lt40' ;
MPRINT(EM_DIAGRAM):   label menopauselt40 = 'Dummy: menopause=lt40' ;
22677     +
22678     +      label node_caps_ = 'Dummy: node_caps=?' ;
MPRINT(EM_DIAGRAM):   label node_caps_ = 'Dummy: node_caps=?' ;
22679     +
22680     +      label node_capsno = 'Dummy: node_caps=no' ;
MPRINT(EM_DIAGRAM):   label node_capsno = 'Dummy: node_caps=no' ;
22681     +
22682     +      label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
MPRINT(EM_DIAGRAM):   label tumor_size0_4 = 'Dummy: tumor_size=0-4' ;
22683     +
22684     +      label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
MPRINT(EM_DIAGRAM):   label tumor_size10_14 = 'Dummy: tumor_size=10-14' ;
22685     +
22686     +      label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
MPRINT(EM_DIAGRAM):   label tumor_size15_19 = 'Dummy: tumor_size=15-19' ;
22687     +
22688     +      label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
MPRINT(EM_DIAGRAM):   label tumor_size20_24 = 'Dummy: tumor_size=20-24' ;
22689     +
22690     +      label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
MPRINT(EM_DIAGRAM):   label tumor_size25_29 = 'Dummy: tumor_size=25-29' ;
22691     +
22692     +      label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
MPRINT(EM_DIAGRAM):   label tumor_size30_34 = 'Dummy: tumor_size=30-34' ;
22693     +
22694     +      label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
MPRINT(EM_DIAGRAM):   label tumor_size35_39 = 'Dummy: tumor_size=35-39' ;
22695     +
22696     +      label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
MPRINT(EM_DIAGRAM):   label tumor_size40_44 = 'Dummy: tumor_size=40-44' ;
22697     +
22698     +      label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
MPRINT(EM_DIAGRAM):   label tumor_size45_49 = 'Dummy: tumor_size=45-49' ;
22699     +
22700     +      label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
MPRINT(EM_DIAGRAM):   label tumor_size5_9 = 'Dummy: tumor_size=5-9' ;
22701     +
22702     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
22703     +
22704     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
22705     +
22706     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
22707     +
22708     +      label I_Class = 'Into: Class' ;
MPRINT(EM_DIAGRAM):   label I_Class = 'Into: Class' ;
22709     +
22710     +      label F_Class = 'From: Class' ;
MPRINT(EM_DIAGRAM):   label F_Class = 'From: Class' ;
22711     +
22712     +      label U_Class = 'Unnormalized Into: Class' ;
MPRINT(EM_DIAGRAM):   label U_Class = 'Unnormalized Into: Class' ;
22713     +
22714     +      label P_Classrecurrence_events = 'Predicted: Class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_Classrecurrence_events = 'Predicted: Class=recurrence-events' ;
22715     +
22716     +      label R_Classrecurrence_events = 'Residual: Class=recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_Classrecurrence_events = 'Residual: Class=recurrence-events' ;
22717     +
22718     +      label P_Classno_recurrence_events =
22719     +'Predicted: Class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label P_Classno_recurrence_events = 'Predicted: Class=no-recurrence-events' ;
22720     +
22721     +      label R_Classno_recurrence_events =
22722     +'Residual: Class=no-recurrence-events' ;
MPRINT(EM_DIAGRAM):   label R_Classno_recurrence_events = 'Residual: Class=no-recurrence-events' ;
22723     +
22724     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
22725     +
22726     +*** Generate dummy variables for age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for age ;
22727     +drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
MPRINT(EM_DIAGRAM):   drop age20_29 age30_39 age40_49 age50_59 age60_69 ;
22728     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22729     +age20_29 = 0;
MPRINT(EM_DIAGRAM):   age20_29 = 0;
22730     +age30_39 = 0;
MPRINT(EM_DIAGRAM):   age30_39 = 0;
22731     +age40_49 = 0;
MPRINT(EM_DIAGRAM):   age40_49 = 0;
22732     +age50_59 = 0;
MPRINT(EM_DIAGRAM):   age50_59 = 0;
22733     +age60_69 = 0;
MPRINT(EM_DIAGRAM):   age60_69 = 0;
22734     +if missing( age ) then do;
MPRINT(EM_DIAGRAM):   if missing( age ) then do;
22735     +   age20_29 = .;
MPRINT(EM_DIAGRAM):   age20_29 = .;
22736     +   age30_39 = .;
MPRINT(EM_DIAGRAM):   age30_39 = .;
22737     +   age40_49 = .;
MPRINT(EM_DIAGRAM):   age40_49 = .;
22738     +   age50_59 = .;
MPRINT(EM_DIAGRAM):   age50_59 = .;
22739     +   age60_69 = .;
MPRINT(EM_DIAGRAM):   age60_69 = .;
22740     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22741     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22742     +end;
MPRINT(EM_DIAGRAM):   end;
22743     +else do;
MPRINT(EM_DIAGRAM):   else do;
22744     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22745     +   _dm5 = put( age , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( age , $5. );
22746     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
22747     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
22748     +   if _dm5 <= '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-49' then do;
22749     +      if _dm5 <= '30-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-39' then do;
22750     +         if _dm5 = '20-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-29' then do;
22751     +            age20_29 = 1;
MPRINT(EM_DIAGRAM):   age20_29 = 1;
22752     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22753     +         end;
MPRINT(EM_DIAGRAM):   end;
22754     +         else do;
MPRINT(EM_DIAGRAM):   else do;
22755     +            if _dm5 = '30-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-39' then do;
22756     +               age30_39 = 1;
MPRINT(EM_DIAGRAM):   age30_39 = 1;
22757     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22758     +            end;
MPRINT(EM_DIAGRAM):   end;
22759     +         end;
MPRINT(EM_DIAGRAM):   end;
22760     +      end;
MPRINT(EM_DIAGRAM):   end;
22761     +      else do;
MPRINT(EM_DIAGRAM):   else do;
22762     +         if _dm5 = '40-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-49' then do;
22763     +            age40_49 = 1;
MPRINT(EM_DIAGRAM):   age40_49 = 1;
22764     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22765     +         end;
MPRINT(EM_DIAGRAM):   end;
22766     +      end;
MPRINT(EM_DIAGRAM):   end;
22767     +   end;
MPRINT(EM_DIAGRAM):   end;
22768     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22769     +      if _dm5 <= '60-69'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '60-69' then do;
22770     +         if _dm5 = '50-59'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-59' then do;
22771     +            age50_59 = 1;
MPRINT(EM_DIAGRAM):   age50_59 = 1;
22772     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22773     +         end;
MPRINT(EM_DIAGRAM):   end;
22774     +         else do;
MPRINT(EM_DIAGRAM):   else do;
22775     +            if _dm5 = '60-69'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '60-69' then do;
22776     +               age60_69 = 1;
MPRINT(EM_DIAGRAM):   age60_69 = 1;
22777     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22778     +            end;
MPRINT(EM_DIAGRAM):   end;
22779     +         end;
MPRINT(EM_DIAGRAM):   end;
22780     +      end;
MPRINT(EM_DIAGRAM):   end;
22781     +      else do;
MPRINT(EM_DIAGRAM):   else do;
22782     +         if _dm5 = '70-79'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '70-79' then do;
22783     +            age20_29 = -1;
MPRINT(EM_DIAGRAM):   age20_29 = -1;
22784     +            age30_39 = -1;
MPRINT(EM_DIAGRAM):   age30_39 = -1;
22785     +            age40_49 = -1;
MPRINT(EM_DIAGRAM):   age40_49 = -1;
22786     +            age50_59 = -1;
MPRINT(EM_DIAGRAM):   age50_59 = -1;
22787     +            age60_69 = -1;
MPRINT(EM_DIAGRAM):   age60_69 = -1;
22788     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
22789     +         end;
MPRINT(EM_DIAGRAM):   end;
22790     +      end;
MPRINT(EM_DIAGRAM):   end;
22791     +   end;
MPRINT(EM_DIAGRAM):   end;
22792     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
22793     +      age20_29 = .;
MPRINT(EM_DIAGRAM):   age20_29 = .;
22794     +      age30_39 = .;
MPRINT(EM_DIAGRAM):   age30_39 = .;
22795     +      age40_49 = .;
MPRINT(EM_DIAGRAM):   age40_49 = .;
22796     +      age50_59 = .;
MPRINT(EM_DIAGRAM):   age50_59 = .;
22797     +      age60_69 = .;
MPRINT(EM_DIAGRAM):   age60_69 = .;
22798     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22799     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22800     +   end;
MPRINT(EM_DIAGRAM):   end;
22801     +end;
MPRINT(EM_DIAGRAM):   end;
22802     +
22803     +*** Generate dummy variables for breast ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast ;
22804     +drop breastleft ;
MPRINT(EM_DIAGRAM):   drop breastleft ;
22805     +if missing( breast ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast ) then do;
22806     +   breastleft = .;
MPRINT(EM_DIAGRAM):   breastleft = .;
22807     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22808     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22809     +end;
MPRINT(EM_DIAGRAM):   end;
22810     +else do;
MPRINT(EM_DIAGRAM):   else do;
22811     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22812     +   _dm5 = put( breast , $5. );
MPRINT(EM_DIAGRAM):   _dm5 = put( breast , $5. );
22813     +   %DMNORMIP( _dm5 )
MPRINT(DMNORMIP):   call dmnorm(_dm5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
22814     +   if _dm5 = 'LEFT'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = 'LEFT' then do;
22815     +      breastleft = 1;
MPRINT(EM_DIAGRAM):   breastleft = 1;
22816     +   end;
MPRINT(EM_DIAGRAM):   end;
22817     +   else if _dm5 = 'RIGHT'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = 'RIGHT' then do;
22818     +      breastleft = -1;
MPRINT(EM_DIAGRAM):   breastleft = -1;
22819     +   end;
MPRINT(EM_DIAGRAM):   end;
22820     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22821     +      breastleft = .;
MPRINT(EM_DIAGRAM):   breastleft = .;
22822     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22823     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22824     +   end;
MPRINT(EM_DIAGRAM):   end;
22825     +end;
MPRINT(EM_DIAGRAM):   end;
22826     +
22827     +*** Generate dummy variables for breast_quad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for breast_quad ;
22828     +drop breast_quad_ breast_quadcentral breast_quadleft_low breast_quadleft_up
22829     +        breast_quadright_low ;
MPRINT(EM_DIAGRAM):   drop breast_quad_ breast_quadcentral breast_quadleft_low breast_quadleft_up breast_quadright_low ;
22830     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22831     +breast_quad_ = 0;
MPRINT(EM_DIAGRAM):   breast_quad_ = 0;
22832     +breast_quadcentral = 0;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 0;
22833     +breast_quadleft_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 0;
22834     +breast_quadleft_up = 0;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 0;
22835     +breast_quadright_low = 0;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 0;
22836     +if missing( breast_quad ) then do;
MPRINT(EM_DIAGRAM):   if missing( breast_quad ) then do;
22837     +   breast_quad_ = .;
MPRINT(EM_DIAGRAM):   breast_quad_ = .;
22838     +   breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
22839     +   breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
22840     +   breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
22841     +   breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
22842     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22843     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22844     +end;
MPRINT(EM_DIAGRAM):   end;
22845     +else do;
MPRINT(EM_DIAGRAM):   else do;
22846     +   length _dm9 $ 9; drop _dm9 ;
MPRINT(EM_DIAGRAM):   length _dm9 $ 9;
MPRINT(EM_DIAGRAM):   drop _dm9 ;
22847     +   %DMNORMCP( breast_quad , _dm9 )
MPRINT(DMNORMCP):   _dm9=dmnorm(breast_quad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
22848     +   if _dm9 = 'LEFT_UP'  then do;
MPRINT(EM_DIAGRAM):   if _dm9 = 'LEFT_UP' then do;
22849     +      breast_quadleft_up = 1;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = 1;
22850     +   end;
MPRINT(EM_DIAGRAM):   end;
22851     +   else if _dm9 = 'LEFT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'LEFT_LOW' then do;
22852     +      breast_quadleft_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = 1;
22853     +   end;
MPRINT(EM_DIAGRAM):   end;
22854     +   else if _dm9 = 'RIGHT_UP'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_UP' then do;
22855     +      breast_quad_ = -1;
MPRINT(EM_DIAGRAM):   breast_quad_ = -1;
22856     +      breast_quadcentral = -1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = -1;
22857     +      breast_quadleft_low = -1;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = -1;
22858     +      breast_quadleft_up = -1;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = -1;
22859     +      breast_quadright_low = -1;
MPRINT(EM_DIAGRAM):   breast_quadright_low = -1;
22860     +   end;
MPRINT(EM_DIAGRAM):   end;
22861     +   else if _dm9 = 'CENTRAL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'CENTRAL' then do;
22862     +      breast_quadcentral = 1;
MPRINT(EM_DIAGRAM):   breast_quadcentral = 1;
22863     +   end;
MPRINT(EM_DIAGRAM):   end;
22864     +   else if _dm9 = 'RIGHT_LOW'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = 'RIGHT_LOW' then do;
22865     +      breast_quadright_low = 1;
MPRINT(EM_DIAGRAM):   breast_quadright_low = 1;
22866     +   end;
MPRINT(EM_DIAGRAM):   end;
22867     +   else if _dm9 = '?'  then do;
MPRINT(EM_DIAGRAM):   else if _dm9 = '?' then do;
22868     +      breast_quad_ = 1;
MPRINT(EM_DIAGRAM):   breast_quad_ = 1;
22869     +   end;
MPRINT(EM_DIAGRAM):   end;
22870     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22871     +      breast_quad_ = .;
MPRINT(EM_DIAGRAM):   breast_quad_ = .;
22872     +      breast_quadcentral = .;
MPRINT(EM_DIAGRAM):   breast_quadcentral = .;
22873     +      breast_quadleft_low = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_low = .;
22874     +      breast_quadleft_up = .;
MPRINT(EM_DIAGRAM):   breast_quadleft_up = .;
22875     +      breast_quadright_low = .;
MPRINT(EM_DIAGRAM):   breast_quadright_low = .;
22876     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22877     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22878     +   end;
MPRINT(EM_DIAGRAM):   end;
22879     +end;
MPRINT(EM_DIAGRAM):   end;
22880     +
22881     +*** Generate dummy variables for inv_nodes ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for inv_nodes ;
22882     +drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 inv_nodes3_5
22883     +        inv_nodes6_8 ;
MPRINT(EM_DIAGRAM):   drop inv_nodes0_2 inv_nodes12_14 inv_nodes15_17 inv_nodes24_26 inv_nodes3_5 inv_nodes6_8 ;
22884     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
22885     +inv_nodes0_2 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 0;
22886     +inv_nodes12_14 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 0;
22887     +inv_nodes15_17 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 0;
22888     +inv_nodes24_26 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 0;
22889     +inv_nodes3_5 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 0;
22890     +inv_nodes6_8 = 0;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 0;
22891     +if missing( inv_nodes ) then do;
MPRINT(EM_DIAGRAM):   if missing( inv_nodes ) then do;
22892     +   inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
22893     +   inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
22894     +   inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
22895     +   inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
22896     +   inv_nodes3_5 = .;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
22897     +   inv_nodes6_8 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
22898     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22899     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22900     +end;
MPRINT(EM_DIAGRAM):   end;
22901     +else do;
MPRINT(EM_DIAGRAM):   else do;
22902     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
22903     +   %DMNORMCP( inv_nodes , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(inv_nodes,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
22904     +   if _dm5 = '0-2'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-2' then do;
22905     +      inv_nodes0_2 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = 1;
22906     +   end;
MPRINT(EM_DIAGRAM):   end;
22907     +   else if _dm5 = '3-5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '3-5' then do;
22908     +      inv_nodes3_5 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = 1;
22909     +   end;
MPRINT(EM_DIAGRAM):   end;
22910     +   else if _dm5 = '6-8'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '6-8' then do;
22911     +      inv_nodes6_8 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = 1;
22912     +   end;
MPRINT(EM_DIAGRAM):   end;
22913     +   else if _dm5 = '15-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '15-17' then do;
22914     +      inv_nodes15_17 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = 1;
22915     +   end;
MPRINT(EM_DIAGRAM):   end;
22916     +   else if _dm5 = '9-11'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '9-11' then do;
22917     +      inv_nodes0_2 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = -1;
22918     +      inv_nodes12_14 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = -1;
22919     +      inv_nodes15_17 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = -1;
22920     +      inv_nodes24_26 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = -1;
22921     +      inv_nodes3_5 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = -1;
22922     +      inv_nodes6_8 = -1;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = -1;
22923     +   end;
MPRINT(EM_DIAGRAM):   end;
22924     +   else if _dm5 = '12-14'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '12-14' then do;
22925     +      inv_nodes12_14 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = 1;
22926     +   end;
MPRINT(EM_DIAGRAM):   end;
22927     +   else if _dm5 = '24-26'  then do;
MPRINT(EM_DIAGRAM):   else if _dm5 = '24-26' then do;
22928     +      inv_nodes24_26 = 1;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = 1;
22929     +   end;
MPRINT(EM_DIAGRAM):   end;
22930     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22931     +      inv_nodes0_2 = .;
MPRINT(EM_DIAGRAM):   inv_nodes0_2 = .;
22932     +      inv_nodes12_14 = .;
MPRINT(EM_DIAGRAM):   inv_nodes12_14 = .;
22933     +      inv_nodes15_17 = .;
MPRINT(EM_DIAGRAM):   inv_nodes15_17 = .;
22934     +      inv_nodes24_26 = .;
MPRINT(EM_DIAGRAM):   inv_nodes24_26 = .;
22935     +      inv_nodes3_5 = .;
MPRINT(EM_DIAGRAM):   inv_nodes3_5 = .;
22936     +      inv_nodes6_8 = .;
MPRINT(EM_DIAGRAM):   inv_nodes6_8 = .;
22937     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22938     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22939     +   end;
MPRINT(EM_DIAGRAM):   end;
22940     +end;
MPRINT(EM_DIAGRAM):   end;
22941     +
22942     +*** Generate dummy variables for irradiat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for irradiat ;
22943     +drop irradiatno ;
MPRINT(EM_DIAGRAM):   drop irradiatno ;
22944     +if missing( irradiat ) then do;
MPRINT(EM_DIAGRAM):   if missing( irradiat ) then do;
22945     +   irradiatno = .;
MPRINT(EM_DIAGRAM):   irradiatno = .;
22946     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22947     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22948     +end;
MPRINT(EM_DIAGRAM):   end;
22949     +else do;
MPRINT(EM_DIAGRAM):   else do;
22950     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
22951     +   _dm3 = put( irradiat , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( irradiat , $3. );
22952     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
22953     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
22954     +      irradiatno = 1;
MPRINT(EM_DIAGRAM):   irradiatno = 1;
22955     +   end;
MPRINT(EM_DIAGRAM):   end;
22956     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
22957     +      irradiatno = -1;
MPRINT(EM_DIAGRAM):   irradiatno = -1;
22958     +   end;
MPRINT(EM_DIAGRAM):   end;
22959     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22960     +      irradiatno = .;
MPRINT(EM_DIAGRAM):   irradiatno = .;
22961     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22962     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22963     +   end;
MPRINT(EM_DIAGRAM):   end;
22964     +end;
MPRINT(EM_DIAGRAM):   end;
22965     +
22966     +*** Generate dummy variables for menopause ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for menopause ;
22967     +drop menopausege40 menopauselt40 ;
MPRINT(EM_DIAGRAM):   drop menopausege40 menopauselt40 ;
22968     +if missing( menopause ) then do;
MPRINT(EM_DIAGRAM):   if missing( menopause ) then do;
22969     +   menopausege40 = .;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
22970     +   menopauselt40 = .;
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
22971     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
22972     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22973     +end;
MPRINT(EM_DIAGRAM):   end;
22974     +else do;
MPRINT(EM_DIAGRAM):   else do;
22975     +   length _dm7 $ 7; drop _dm7 ;
MPRINT(EM_DIAGRAM):   length _dm7 $ 7;
MPRINT(EM_DIAGRAM):   drop _dm7 ;
22976     +   _dm7 = put( menopause , $7. );
MPRINT(EM_DIAGRAM):   _dm7 = put( menopause , $7. );
22977     +   %DMNORMIP( _dm7 )
MPRINT(DMNORMIP):   call dmnorm(_dm7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
22978     +   if _dm7 = 'PREMENO'  then do;
MPRINT(EM_DIAGRAM):   if _dm7 = 'PREMENO' then do;
22979     +      menopausege40 = -1;
MPRINT(EM_DIAGRAM):   menopausege40 = -1;
22980     +      menopauselt40 = -1;
MPRINT(EM_DIAGRAM):   menopauselt40 = -1;
22981     +   end;
MPRINT(EM_DIAGRAM):   end;
22982     +   else if _dm7 = 'GE40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'GE40' then do;
22983     +      menopausege40 = 1;
MPRINT(EM_DIAGRAM):   menopausege40 = 1;
22984     +      menopauselt40 = 0;
MPRINT(EM_DIAGRAM):   menopauselt40 = 0;
22985     +   end;
MPRINT(EM_DIAGRAM):   end;
22986     +   else if _dm7 = 'LT40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm7 = 'LT40' then do;
22987     +      menopausege40 = 0;
MPRINT(EM_DIAGRAM):   menopausege40 = 0;
22988     +      menopauselt40 = 1;
MPRINT(EM_DIAGRAM):   menopauselt40 = 1;
22989     +   end;
MPRINT(EM_DIAGRAM):   end;
22990     +   else do;
MPRINT(EM_DIAGRAM):   else do;
22991     +      menopausege40 = .;
MPRINT(EM_DIAGRAM):   menopausege40 = .;
22992     +      menopauselt40 = .;
MPRINT(EM_DIAGRAM):   menopauselt40 = .;
22993     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
22994     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
22995     +   end;
MPRINT(EM_DIAGRAM):   end;
22996     +end;
MPRINT(EM_DIAGRAM):   end;
22997     +
22998     +*** Generate dummy variables for node_caps ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for node_caps ;
22999     +drop node_caps_ node_capsno ;
MPRINT(EM_DIAGRAM):   drop node_caps_ node_capsno ;
23000     +if missing( node_caps ) then do;
MPRINT(EM_DIAGRAM):   if missing( node_caps ) then do;
23001     +   node_caps_ = .;
MPRINT(EM_DIAGRAM):   node_caps_ = .;
23002     +   node_capsno = .;
MPRINT(EM_DIAGRAM):   node_capsno = .;
23003     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23004     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23005     +end;
MPRINT(EM_DIAGRAM):   end;
23006     +else do;
MPRINT(EM_DIAGRAM):   else do;
23007     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
23008     +   %DMNORMCP( node_caps , _dm3 )
MPRINT(DMNORMCP):   _dm3=dmnorm(node_caps,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23009     +   if _dm3 = 'NO'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'NO' then do;
23010     +      node_caps_ = 0;
MPRINT(EM_DIAGRAM):   node_caps_ = 0;
23011     +      node_capsno = 1;
MPRINT(EM_DIAGRAM):   node_capsno = 1;
23012     +   end;
MPRINT(EM_DIAGRAM):   end;
23013     +   else if _dm3 = 'YES'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'YES' then do;
23014     +      node_caps_ = -1;
MPRINT(EM_DIAGRAM):   node_caps_ = -1;
23015     +      node_capsno = -1;
MPRINT(EM_DIAGRAM):   node_capsno = -1;
23016     +   end;
MPRINT(EM_DIAGRAM):   end;
23017     +   else if _dm3 = '?'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = '?' then do;
23018     +      node_caps_ = 1;
MPRINT(EM_DIAGRAM):   node_caps_ = 1;
23019     +      node_capsno = 0;
MPRINT(EM_DIAGRAM):   node_capsno = 0;
23020     +   end;
MPRINT(EM_DIAGRAM):   end;
23021     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23022     +      node_caps_ = .;
MPRINT(EM_DIAGRAM):   node_caps_ = .;
23023     +      node_capsno = .;
MPRINT(EM_DIAGRAM):   node_capsno = .;
23024     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23025     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23026     +   end;
MPRINT(EM_DIAGRAM):   end;
23027     +end;
MPRINT(EM_DIAGRAM):   end;
23028     +
23029     +*** Generate dummy variables for tumor_size ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for tumor_size ;
23030     +drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24
23031     +        tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44
23032     +        tumor_size45_49 tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   drop tumor_size0_4 tumor_size10_14 tumor_size15_19 tumor_size20_24 tumor_size25_29 tumor_size30_34 tumor_size35_39 tumor_size40_44 tumor_size45_49 tumor_size5_9 ;
23033     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
23034     +tumor_size0_4 = 0;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 0;
23035     +tumor_size10_14 = 0;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 0;
23036     +tumor_size15_19 = 0;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 0;
23037     +tumor_size20_24 = 0;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 0;
23038     +tumor_size25_29 = 0;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 0;
23039     +tumor_size30_34 = 0;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 0;
23040     +tumor_size35_39 = 0;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 0;
23041     +tumor_size40_44 = 0;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 0;
23042     +tumor_size45_49 = 0;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 0;
23043     +tumor_size5_9 = 0;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 0;
23044     +if missing( tumor_size ) then do;
MPRINT(EM_DIAGRAM):   if missing( tumor_size ) then do;
23045     +   tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
23046     +   tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
23047     +   tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
23048     +   tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
23049     +   tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
23050     +   tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
23051     +   tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
23052     +   tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
23053     +   tumor_size45_49 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
23054     +   tumor_size5_9 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
23055     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
23056     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23057     +end;
MPRINT(EM_DIAGRAM):   end;
23058     +else do;
MPRINT(EM_DIAGRAM):   else do;
23059     +   length _dm5 $ 5; drop _dm5 ;
MPRINT(EM_DIAGRAM):   length _dm5 $ 5;
MPRINT(EM_DIAGRAM):   drop _dm5 ;
23060     +   %DMNORMCP( tumor_size , _dm5 )
MPRINT(DMNORMCP):   _dm5=dmnorm(tumor_size,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
23061     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
23062     +   if _dm5 <= '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '30-34' then do;
23063     +      if _dm5 <= '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '15-19' then do;
23064     +         if _dm5 <= '10-14'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '10-14' then do;
23065     +            if _dm5 = '0-4'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '0-4' then do;
23066     +               tumor_size0_4 = 1;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = 1;
23067     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23068     +            end;
MPRINT(EM_DIAGRAM):   end;
23069     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23070     +               if _dm5 = '10-14'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '10-14' then do;
23071     +                  tumor_size10_14 = 1;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = 1;
23072     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23073     +               end;
MPRINT(EM_DIAGRAM):   end;
23074     +            end;
MPRINT(EM_DIAGRAM):   end;
23075     +         end;
MPRINT(EM_DIAGRAM):   end;
23076     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23077     +            if _dm5 = '15-19'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '15-19' then do;
23078     +               tumor_size15_19 = 1;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = 1;
23079     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23080     +            end;
MPRINT(EM_DIAGRAM):   end;
23081     +         end;
MPRINT(EM_DIAGRAM):   end;
23082     +      end;
MPRINT(EM_DIAGRAM):   end;
23083     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23084     +         if _dm5 <= '25-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '25-29' then do;
23085     +            if _dm5 = '20-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '20-24' then do;
23086     +               tumor_size20_24 = 1;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = 1;
23087     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23088     +            end;
MPRINT(EM_DIAGRAM):   end;
23089     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23090     +               if _dm5 = '25-29'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '25-29' then do;
23091     +                  tumor_size25_29 = 1;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = 1;
23092     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23093     +               end;
MPRINT(EM_DIAGRAM):   end;
23094     +            end;
MPRINT(EM_DIAGRAM):   end;
23095     +         end;
MPRINT(EM_DIAGRAM):   end;
23096     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23097     +            if _dm5 = '30-34'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '30-34' then do;
23098     +               tumor_size30_34 = 1;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = 1;
23099     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23100     +            end;
MPRINT(EM_DIAGRAM):   end;
23101     +         end;
MPRINT(EM_DIAGRAM):   end;
23102     +      end;
MPRINT(EM_DIAGRAM):   end;
23103     +   end;
MPRINT(EM_DIAGRAM):   end;
23104     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23105     +      if _dm5 <= '45-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '45-49' then do;
23106     +         if _dm5 <= '40-44'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 <= '40-44' then do;
23107     +            if _dm5 = '35-39'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '35-39' then do;
23108     +               tumor_size35_39 = 1;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = 1;
23109     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23110     +            end;
MPRINT(EM_DIAGRAM):   end;
23111     +            else do;
MPRINT(EM_DIAGRAM):   else do;
23112     +               if _dm5 = '40-44'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '40-44' then do;
23113     +                  tumor_size40_44 = 1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = 1;
23114     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23115     +               end;
MPRINT(EM_DIAGRAM):   end;
23116     +            end;
MPRINT(EM_DIAGRAM):   end;
23117     +         end;
MPRINT(EM_DIAGRAM):   end;
23118     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23119     +            if _dm5 = '45-49'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '45-49' then do;
23120     +               tumor_size45_49 = 1;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = 1;
23121     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23122     +            end;
MPRINT(EM_DIAGRAM):   end;
23123     +         end;
MPRINT(EM_DIAGRAM):   end;
23124     +      end;
MPRINT(EM_DIAGRAM):   end;
23125     +      else do;
MPRINT(EM_DIAGRAM):   else do;
23126     +         if _dm5 = '5-9'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '5-9' then do;
23127     +            tumor_size5_9 = 1;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = 1;
23128     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23129     +         end;
MPRINT(EM_DIAGRAM):   end;
23130     +         else do;
MPRINT(EM_DIAGRAM):   else do;
23131     +            if _dm5 = '50-54'  then do;
MPRINT(EM_DIAGRAM):   if _dm5 = '50-54' then do;
23132     +               tumor_size0_4 = -1;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = -1;
23133     +               tumor_size10_14 = -1;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = -1;
23134     +               tumor_size15_19 = -1;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = -1;
23135     +               tumor_size20_24 = -1;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = -1;
23136     +               tumor_size25_29 = -1;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = -1;
23137     +               tumor_size30_34 = -1;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = -1;
23138     +               tumor_size35_39 = -1;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = -1;
23139     +               tumor_size40_44 = -1;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = -1;
23140     +               tumor_size45_49 = -1;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = -1;
23141     +               tumor_size5_9 = -1;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = -1;
23142     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
23143     +            end;
MPRINT(EM_DIAGRAM):   end;
23144     +         end;
MPRINT(EM_DIAGRAM):   end;
23145     +      end;
MPRINT(EM_DIAGRAM):   end;
23146     +   end;
MPRINT(EM_DIAGRAM):   end;
23147     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
23148     +      tumor_size0_4 = .;
MPRINT(EM_DIAGRAM):   tumor_size0_4 = .;
23149     +      tumor_size10_14 = .;
MPRINT(EM_DIAGRAM):   tumor_size10_14 = .;
23150     +      tumor_size15_19 = .;
MPRINT(EM_DIAGRAM):   tumor_size15_19 = .;
23151     +      tumor_size20_24 = .;
MPRINT(EM_DIAGRAM):   tumor_size20_24 = .;
23152     +      tumor_size25_29 = .;
MPRINT(EM_DIAGRAM):   tumor_size25_29 = .;
23153     +      tumor_size30_34 = .;
MPRINT(EM_DIAGRAM):   tumor_size30_34 = .;
23154     +      tumor_size35_39 = .;
MPRINT(EM_DIAGRAM):   tumor_size35_39 = .;
23155     +      tumor_size40_44 = .;
MPRINT(EM_DIAGRAM):   tumor_size40_44 = .;
23156     +      tumor_size45_49 = .;
MPRINT(EM_DIAGRAM):   tumor_size45_49 = .;
23157     +      tumor_size5_9 = .;
MPRINT(EM_DIAGRAM):   tumor_size5_9 = .;
23158     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
23159     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23160     +   end;
MPRINT(EM_DIAGRAM):   end;
23161     +end;
MPRINT(EM_DIAGRAM):   end;
23162     +
23163     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23164     +*** Checking missing input Interval
23165     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
23166     +
23167     +IF NMISS(
23168     +   deg_malig   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( deg_malig ) THEN DO;
23169     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
23170     +
23171     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
23172     +END;
MPRINT(EM_DIAGRAM):   END;
23173     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23174     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
23175     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23176     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23177     +   S_deg_malig  =    -2.78253429049127 +     1.35716746031314 * deg_malig ;
MPRINT(EM_DIAGRAM):   S_deg_malig = -2.78253429049127 + 1.35716746031314 * deg_malig ;
23178     +END;
MPRINT(EM_DIAGRAM):   END;
23179     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23180     +   IF MISSING( deg_malig ) THEN S_deg_malig  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( deg_malig ) THEN S_deg_malig = . ;
23181     +   ELSE S_deg_malig  =    -2.78253429049127 +     1.35716746031314 * deg_malig
23182     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_deg_malig = -2.78253429049127 + 1.35716746031314 * deg_malig ;
23183     +END;
MPRINT(EM_DIAGRAM):   END;
23184     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23185     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
23186     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23187     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23188     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
23189     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23190     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23191     +   H11  =    -2.74796971637258 * S_deg_malig ;
MPRINT(EM_DIAGRAM):   H11 = -2.74796971637258 * S_deg_malig ;
23192     +   H12  =    -1.14470380880618 * S_deg_malig ;
MPRINT(EM_DIAGRAM):   H12 = -1.14470380880618 * S_deg_malig ;
23193     +   H13  =    -0.05499579882751 * S_deg_malig ;
MPRINT(EM_DIAGRAM):   H13 = -0.05499579882751 * S_deg_malig ;
23194     +   H11  = H11  +    -0.29476277137846 * age20_29  +      -0.010366167334 *
23195     +        age30_39  +    -0.17555609047413 * age40_49  +     0.11413435552706 *
23196     +        age50_59  +    -0.06117744625175 * age60_69  +     -0.5368742297391 *
23197     +        breastleft  +    -0.24218262404951 * breast_quad_
23198     +          +     0.06068411466854 * breast_quadcentral
23199     +          +     0.97640815123223 * breast_quadleft_low
23200     +          +     0.67644175699563 * breast_quadleft_up
23201     +          +     0.17789865004419 * breast_quadright_low
23202     +          +     2.55134897365733 * inv_nodes0_2  +     0.21424158811054 *
23203     +        inv_nodes12_14  +     0.47820995623683 * inv_nodes15_17
23204     +          +      0.2622943817266 * inv_nodes24_26  +     0.12643888087769 *
23205     +        inv_nodes3_5  +     0.84201931474903 * inv_nodes6_8
23206     +          +     1.04760396339187 * irradiatno  +     0.07463094979299 *
23207     +        menopausege40  +    -0.44581886051603 * menopauselt40
23208     +          +    -0.87854603983125 * node_caps_  +      0.4570771968374 *
23209     +        node_capsno  +     0.37381802079042 * tumor_size0_4
23210     +          +     0.85670494080923 * tumor_size10_14  +     0.44903004755901 *
23211     +        tumor_size15_19  +    -0.17074053785079 * tumor_size20_24
23212     +          +     0.06170619904789 * tumor_size25_29  +    -0.59125038030471 *
23213     +        tumor_size30_34  +     0.83829482457373 * tumor_size35_39
23214     +          +     0.62726406774169 * tumor_size40_44  +     -0.1516346314299 *
23215     +        tumor_size45_49  +     0.52677539133351 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.29476277137846 * age20_29 + -0.010366167334 * age30_39 + -0.17555609047413 * age40_49 + 0.11413435552706 * age50_59 + -0.06117744625175 * age60_69 + -0.5368742297391 * breastleft + -0.24218262404951 * breast_quad_ + 
0.06068411466854 * breast_quadcentral + 0.97640815123223 * breast_quadleft_low + 0.67644175699563 * breast_quadleft_up + 0.17789865004419 * breast_quadright_low + 2.55134897365733 * inv_nodes0_2 + 0.21424158811054 * inv_nodes12_14 + 0.47820995623683 * 
inv_nodes15_17 + 0.2622943817266 * inv_nodes24_26 + 0.12643888087769 * inv_nodes3_5 + 0.84201931474903 * inv_nodes6_8 + 1.04760396339187 * irradiatno + 0.07463094979299 * menopausege40 + -0.44581886051603 * menopauselt40 + -0.87854603983125 * node_caps_ + 
0.4570771968374 * node_capsno + 0.37381802079042 * tumor_size0_4 + 0.85670494080923 * tumor_size10_14 + 0.44903004755901 * tumor_size15_19 + -0.17074053785079 * tumor_size20_24 + 0.06170619904789 * tumor_size25_29 + -0.59125038030471 * tumor_size30_34 + 
0.83829482457373 * tumor_size35_39 + 0.62726406774169 * tumor_size40_44 + -0.1516346314299 * tumor_size45_49 + 0.52677539133351 * tumor_size5_9 ;
23216     +   H12  = H12  +     0.13027205331591 * age20_29  +    -0.06449783231378 *
23217     +        age30_39  +     0.05824555950222 * age40_49  +     0.59985459190818 *
23218     +        age50_59  +    -0.09738234999184 * age60_69  +     -1.1326563834081 *
23219     +        breastleft  +    -0.09133694414179 * breast_quad_
23220     +          +     0.28807861638446 * breast_quadcentral
23221     +          +     0.59779800988374 * breast_quadleft_low
23222     +          +     1.55322081055081 * breast_quadleft_up
23223     +          +    -0.90745863860562 * breast_quadright_low
23224     +          +      1.5776159015562 * inv_nodes0_2  +    -0.78963665052233 *
23225     +        inv_nodes12_14  +    -0.10914927602566 * inv_nodes15_17
23226     +          +      -0.287641916432 * inv_nodes24_26  +    -0.37759361721497 *
23227     +        inv_nodes3_5  +    -0.89487912276378 * inv_nodes6_8
23228     +          +      1.2533273720272 * irradiatno  +    -0.50422727076849 *
23229     +        menopausege40  +    -0.63949610800281 * menopauselt40
23230     +          +    -0.32842346590983 * node_caps_  +      0.1614812996979 *
23231     +        node_capsno  +     0.15444034413128 * tumor_size0_4
23232     +          +     0.28921143447212 * tumor_size10_14  +     0.93609534347786 *
23233     +        tumor_size15_19  +    -0.74160696513512 * tumor_size20_24
23234     +          +    -0.19349501615176 * tumor_size25_29  +      0.1936345135719 *
23235     +        tumor_size30_34  +     0.72690837246592 * tumor_size35_39
23236     +          +      0.1908875766776 * tumor_size40_44  +    -0.11883017715484 *
23237     +        tumor_size45_49  +    -0.13109284581539 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.13027205331591 * age20_29 + -0.06449783231378 * age30_39 + 0.05824555950222 * age40_49 + 0.59985459190818 * age50_59 + -0.09738234999184 * age60_69 + -1.1326563834081 * breastleft + -0.09133694414179 * breast_quad_ + 
0.28807861638446 * breast_quadcentral + 0.59779800988374 * breast_quadleft_low + 1.55322081055081 * breast_quadleft_up + -0.90745863860562 * breast_quadright_low + 1.5776159015562 * inv_nodes0_2 + -0.78963665052233 * inv_nodes12_14 + -0.10914927602566 * 
inv_nodes15_17 + -0.287641916432 * inv_nodes24_26 + -0.37759361721497 * inv_nodes3_5 + -0.89487912276378 * inv_nodes6_8 + 1.2533273720272 * irradiatno + -0.50422727076849 * menopausege40 + -0.63949610800281 * menopauselt40 + -0.32842346590983 * node_caps_ 
+ 0.1614812996979 * node_capsno + 0.15444034413128 * tumor_size0_4 + 0.28921143447212 * tumor_size10_14 + 0.93609534347786 * tumor_size15_19 + -0.74160696513512 * tumor_size20_24 + -0.19349501615176 * tumor_size25_29 + 0.1936345135719 * tumor_size30_34 + 
0.72690837246592 * tumor_size35_39 + 0.1908875766776 * tumor_size40_44 + -0.11883017715484 * tumor_size45_49 + -0.13109284581539 * tumor_size5_9 ;
23238     +   H13  = H13  +     0.36211839764495 * age20_29  +     0.84571236618358 *
23239     +        age30_39  +    -0.11526347756118 * age40_49  +    -0.04128901011994 *
23240     +        age50_59  +     1.68133643204135 * age60_69  +     0.00813386538131 *
23241     +        breastleft  +     0.53916416059169 * breast_quad_
23242     +          +    -0.08864316260341 * breast_quadcentral
23243     +          +     0.82661415499999 * breast_quadleft_low
23244     +          +     0.71121038673087 * breast_quadleft_up
23245     +          +    -0.82432838124419 * breast_quadright_low
23246     +          +     0.17248835987059 * inv_nodes0_2  +     0.64053633216674 *
23247     +        inv_nodes12_14  +     0.46832383814205 * inv_nodes15_17
23248     +          +     0.34052933199292 * inv_nodes24_26  +     0.51774207100072 *
23249     +        inv_nodes3_5  +     0.22081734421893 * inv_nodes6_8
23250     +          +     0.33158040157428 * irradiatno  +    -0.33994674936188 *
23251     +        menopausege40  +    -0.23106138538014 * menopauselt40
23252     +          +    -0.82389546223861 * node_caps_  +    -0.12001895544508 *
23253     +        node_capsno  +    -0.91622770269526 * tumor_size0_4
23254     +          +    -2.52443038295481 * tumor_size10_14  +    -1.02411778324248 *
23255     +        tumor_size15_19  +     1.98266427103372 * tumor_size20_24
23256     +          +     0.64855674824922 * tumor_size25_29  +     0.40177088900283 *
23257     +        tumor_size30_34  +     -0.3840784388992 * tumor_size35_39
23258     +          +    -1.50455217684477 * tumor_size40_44  +     0.95362832752501 *
23259     +        tumor_size45_49  +    -0.76716804997565 * tumor_size5_9 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.36211839764495 * age20_29 + 0.84571236618358 * age30_39 + -0.11526347756118 * age40_49 + -0.04128901011994 * age50_59 + 1.68133643204135 * age60_69 + 0.00813386538131 * breastleft + 0.53916416059169 * breast_quad_ + 
-0.08864316260341 * breast_quadcentral + 0.82661415499999 * breast_quadleft_low + 0.71121038673087 * breast_quadleft_up + -0.82432838124419 * breast_quadright_low + 0.17248835987059 * inv_nodes0_2 + 0.64053633216674 * inv_nodes12_14 + 0.46832383814205 * 
inv_nodes15_17 + 0.34052933199292 * inv_nodes24_26 + 0.51774207100072 * inv_nodes3_5 + 0.22081734421893 * inv_nodes6_8 + 0.33158040157428 * irradiatno + -0.33994674936188 * menopausege40 + -0.23106138538014 * menopauselt40 + -0.82389546223861 * node_caps_ 
+ -0.12001895544508 * node_capsno + -0.91622770269526 * tumor_size0_4 + -2.52443038295481 * tumor_size10_14 + -1.02411778324248 * tumor_size15_19 + 1.98266427103372 * tumor_size20_24 + 0.64855674824922 * tumor_size25_29 + 0.40177088900283 * 
tumor_size30_34 + -0.3840784388992 * tumor_size35_39 + -1.50455217684477 * tumor_size40_44 + 0.95362832752501 * tumor_size45_49 + -0.76716804997565 * tumor_size5_9 ;
23260     +   H11  =     1.16497275748927 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.16497275748927 + H11 ;
23261     +   H12  =     3.06145127542367 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.06145127542367 + H12 ;
23262     +   H13  =     1.14117810063498 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.14117810063498 + H13 ;
23263     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
23264     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
23265     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
23266     +END;
MPRINT(EM_DIAGRAM):   END;
23267     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23268     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
23269     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
23270     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
23271     +END;
MPRINT(EM_DIAGRAM):   END;
23272     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23273     +*** Writing the Node Class ;
MPRINT(EM_DIAGRAM):   *** Writing the Node Class ;
23274     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23275     +
23276     +*** Generate dummy variables for Class ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Class ;
23277     +drop Classrecurrence_events Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   drop Classrecurrence_events Classno_recurrence_events ;
23278     +label F_Class = 'From: Class' ;
MPRINT(EM_DIAGRAM):   label F_Class = 'From: Class' ;
23279     +length F_Class $ 20;
MPRINT(EM_DIAGRAM):   length F_Class $ 20;
23280     +F_Class = put( Class , $20. );
MPRINT(EM_DIAGRAM):   F_Class = put( Class , $20. );
23281     +%DMNORMIP( F_Class )
MPRINT(DMNORMIP):   call dmnorm(F_Class,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
23282     +if missing( Class ) then do;
MPRINT(EM_DIAGRAM):   if missing( Class ) then do;
23283     +   Classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = .;
23284     +   Classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = .;
23285     +end;
MPRINT(EM_DIAGRAM):   end;
23286     +else do;
MPRINT(EM_DIAGRAM):   else do;
23287     +   if F_Class = 'NO-RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   if F_Class = 'NO-RECURRENCE-EVENTS' then do;
23288     +      Classrecurrence_events = 0;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = 0;
23289     +      Classno_recurrence_events = 1;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = 1;
23290     +   end;
MPRINT(EM_DIAGRAM):   end;
23291     +   else if F_Class = 'RECURRENCE-EVENTS'  then do;
MPRINT(EM_DIAGRAM):   else if F_Class = 'RECURRENCE-EVENTS' then do;
23292     +      Classrecurrence_events = 1;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = 1;
23293     +      Classno_recurrence_events = 0;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = 0;
23294     +   end;
MPRINT(EM_DIAGRAM):   end;
23295     +   else do;
MPRINT(EM_DIAGRAM):   else do;
23296     +      Classrecurrence_events = .;
MPRINT(EM_DIAGRAM):   Classrecurrence_events = .;
23297     +      Classno_recurrence_events = .;
MPRINT(EM_DIAGRAM):   Classno_recurrence_events = .;
23298     +   end;
MPRINT(EM_DIAGRAM):   end;
23299     +end;
MPRINT(EM_DIAGRAM):   end;
23300     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
23301     +   P_Classrecurrence_events  =    -4.90336136114846 * H11
23302     +          +    -13.4892200433884 * H12  +     16.7487792253409 * H13 ;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = -4.90336136114846 * H11 + -13.4892200433884 * H12 + 16.7487792253409 * H13 ;
23303     +   P_Classrecurrence_events  =     0.57881101949988 + P_Classrecurrence_events
23304     +         ;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = 0.57881101949988 + P_Classrecurrence_events ;
23305     +   P_Classno_recurrence_events  = 0;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = 0;
23306     +   _MAX_ = MAX (P_Classrecurrence_events , P_Classno_recurrence_events );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_Classrecurrence_events , P_Classno_recurrence_events );
23307     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
23308     +   P_Classrecurrence_events  = EXP(P_Classrecurrence_events  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = EXP(P_Classrecurrence_events - _MAX_);
23309     +   _SUM_ = _SUM_ + P_Classrecurrence_events ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Classrecurrence_events ;
23310     +   P_Classno_recurrence_events  = EXP(P_Classno_recurrence_events  - _MAX_);
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = EXP(P_Classno_recurrence_events - _MAX_);
23311     +   _SUM_ = _SUM_ + P_Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_Classno_recurrence_events ;
23312     +   P_Classrecurrence_events  = P_Classrecurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = P_Classrecurrence_events / _SUM_;
23313     +   P_Classno_recurrence_events  = P_Classno_recurrence_events  / _SUM_;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = P_Classno_recurrence_events / _SUM_;
23314     +END;
MPRINT(EM_DIAGRAM):   END;
23315     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23316     +   P_Classrecurrence_events  = .;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = .;
23317     +   P_Classno_recurrence_events  = .;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = .;
23318     +END;
MPRINT(EM_DIAGRAM):   END;
23319     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
23320     +   P_Classrecurrence_events  =      0.2964824120603;
MPRINT(EM_DIAGRAM):   P_Classrecurrence_events = 0.2964824120603;
23321     +   P_Classno_recurrence_events  =     0.70351758793969;
MPRINT(EM_DIAGRAM):   P_Classno_recurrence_events = 0.70351758793969;
23322     +END;
MPRINT(EM_DIAGRAM):   END;
23323     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
23324     +*** Writing the Residuals  of the Node Class ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node Class ;
23325     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
23326     +IF MISSING( Classrecurrence_events ) THEN R_Classrecurrence_events  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Classrecurrence_events ) THEN R_Classrecurrence_events = . ;
23327     +ELSE R_Classrecurrence_events  = Classrecurrence_events  -
23328     +        P_Classrecurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE R_Classrecurrence_events = Classrecurrence_events - P_Classrecurrence_events ;
23329     +IF MISSING( Classno_recurrence_events ) THEN R_Classno_recurrence_events
23330     +          = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Classno_recurrence_events ) THEN R_Classno_recurrence_events = . ;
23331     +ELSE R_Classno_recurrence_events  = Classno_recurrence_events  -
23332     +        P_Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   ELSE R_Classno_recurrence_events = Classno_recurrence_events - P_Classno_recurrence_events ;
23333     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23334     +*** Writing the I_Class  AND U_Class ;
MPRINT(EM_DIAGRAM):   *** Writing the I_Class AND U_Class ;
23335     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
23336     +_MAXP_ = P_Classrecurrence_events ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Classrecurrence_events ;
23337     +I_Class  = "RECURRENCE-EVENTS   " ;
MPRINT(EM_DIAGRAM):   I_Class = "RECURRENCE-EVENTS   " ;
23338     +U_Class  = "recurrence-events   " ;
MPRINT(EM_DIAGRAM):   U_Class = "recurrence-events   " ;
23339     +IF( _MAXP_ LT P_Classno_recurrence_events  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_Classno_recurrence_events ) THEN DO;
23340     +   _MAXP_ = P_Classno_recurrence_events ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_Classno_recurrence_events ;
23341     +   I_Class  = "NO-RECURRENCE-EVENTS" ;
MPRINT(EM_DIAGRAM):   I_Class = "NO-RECURRENCE-EVENTS" ;
23342     +   U_Class  = "no-recurrence-events" ;
MPRINT(EM_DIAGRAM):   U_Class = "no-recurrence-events" ;
23343     +END;
MPRINT(EM_DIAGRAM):   END;
23344     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
23345     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
23346     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
23347     +drop
23348     +H11
23349     +H12
23350     +H13
23351     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
23352     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23353      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
23354      quit;
23355      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23356      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23357      * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
23358      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\shaht\OneDrive\Desktop\Final_project\Workspaces\EMWS1\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural_TRAIN out=WORK.M2J93A_8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2J93A_8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2J93A_8(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2J93A_8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2J93A_8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0DLNVYO NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X9T96Q(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   set WORK.M0DLNVYO;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Impt_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Impt_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("CLASS") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
23703      data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMINFO;
23704      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
23705      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
23706      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
23710      run;
23711      proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
23712      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23713      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS1.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
